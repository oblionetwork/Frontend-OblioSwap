{"version":3,"sources":["views/pages/tokens/AddToken.js"],"names":["web3","helper","currencyURL","require","window","ethereum","AddToken","useSelector","state","userReducer","currentChainId","useForm","mode","register","handleSubmit","errors","reset","watch","useState","tokenName","setTokenName","tokenAddress","setTokenAddress","tokenDecimal","setTokenDecimal","tokenImg","setTokenImg","tokenSymbol","setTokenSymbol","className","onSubmit","formData","FormData","set","append","postData","headers","then","res","data","status","toast","success","message","error","catch","err","type","placeholder","autoComplete","name","onChange","event","target","value","utils","isAddress","contract","eth","Contract","approve_abi","toString","methods","call","nam","symbol","sym","decimals","deci","valueChange","ref","required","tokenaddress","readonly","files","imageurl","align","style","background","color","border"],"mappings":"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","file":"static/js/18.6b741ece.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport helper from \"../../../helpers/axiosHelper\";\nimport { useSelector } from \"react-redux\";\n\nimport approve_abi from \"../../../Abi/approve_abi\"\n\nconst apiURL = helper.currencyURL();\n\n\nconst Web3 = require(\"web3\");\nconst web3 = new Web3(window.ethereum);\n\n\nconst AddToken = () => {\n\n  var currentChainId = useSelector(state => state.userReducer.currentChainId);\n  const { register, handleSubmit, errors, watch, reset } = useForm({\n    mode: \"onBlur\",\n  });\n  const [tokenType, setTokenType] = useState(\"\");\n  const [tokenName, setTokenName] = useState(\"\");\n  const [tokenAddress, setTokenAddress] = useState(\"\");\n  const [tokenDecimal, setTokenDecimal] = useState(\"\");\n  const [tokenImg, setTokenImg] = useState(\"\");\n  const [tokenSymbol, setTokenSymbol] = useState(\"\");\n\n  const handleTokenType = (event) => {\n    var selectedType = event.target.value;\n    setTokenType(selectedType);\n  };\n\n  const valueChange = (data) => {\n    let test = web3.utils.isAddress(data)\n\n    if (test) {\n      var contract = new web3.eth.Contract(approve_abi, data.toString())\n\n      contract.methods.name().call().then((nam) => {\n        setTokenName(nam)\n        contract.methods.symbol().call().then((sym) => {\n          setTokenSymbol(sym)\n          contract.methods.decimals().call().then((deci) => {\n            setTokenDecimal(deci)\n\n\n          })\n        })\n      })\n    }\n    else {\n      setTokenName(\"\")\n      setTokenSymbol(\"\")\n      setTokenDecimal(\"\")\n    }\n\n  }\n\n  const onSubmit = () => {\n\n    if (tokenImg && tokenName && tokenAddress && tokenDecimal && tokenDecimal) {\n\n      var formData = new FormData();\n\n      formData.set(\"myImage\", tokenImg);\n      formData.append(\"tokenName\", tokenName)\n      formData.append(\"tokenAddress\", tokenAddress)\n      formData.append(\"tokenDecimal\", tokenDecimal)\n      formData.append(\"tokenSymbol\", tokenSymbol)\n\n      const headers = {\n        'content-type': 'multipart/form-data'\n      };\n\n      helper\n        .postData(\"https://bakxlxiqwosd.pocketswap.org/api/currency/addcurrency\", formData, { headers })\n        .then((res) => {\n          if (res.data.status == 200) {\n            toast.success(res.data.message);\n            reset();\n          } else {\n            toast.error(res.data.message);\n          }\n        })\n        .catch((err) => {\n          toast.error(err);\n        });\n    }\n    else {\n      toast.error(\"Please Fill All Necessary Fields\")\n    }\n  };\n  return (\n    <div className=\"add-token-container\">\n      <form className=\"form-class\" onSubmit={handleSubmit(onSubmit)}>\n        <h5>Add Token</h5>\n        <br></br>\n\n        <div className=\"row\">\n          <div className=\"col-3\">\n            {\" \"}\n            <label>Token Address:</label>\n          </div>\n          <div className=\"col-9\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Token Address\"\n              autoComplete=\"off\"\n              name=\"tokenaddress\"\n              onChange={(event) => { setTokenAddress(event.target.value); valueChange(event.target.value) }}\n              ref={register({\n                required: \"Token Address is required\",\n                // pattern: {\n                //   value: /^0x[a-fA-F0-9]{40}$/,\n                //   message: \"Only Characters\",\n                // },\n              })}\n            />\n            {errors.tokenaddress && (\n              <div className=\"form-error\">{errors.tokenaddress.message}.</div>\n            )}\n          </div>\n        </div>\n\n        <br></br>\n\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <label>Token Name:</label>\n          </div>\n          <div className=\"col-9\">\n            <input\n              type=\"text\"\n              name=\"tokenname\"\n              autoComplete=\"off\"\n              className=\"form-control\"\n              value={tokenName}\n              readonly\n            // placeholder=\"Token Name\"\n            // onChange={(event) => setTokenName(event.target.value)}\n            // ref={register({\n            //   required: \"Token Name is required\",\n            //   pattern: {\n            //     value: /^[A-Za-z0-9]*$/,\n            //     message: \"Only Characters\",\n            //   },\n            // })}\n            />\n            {/* {errors.tokenname && (\n              <div className=\"form-error\">{errors.tokenname.message}.</div>\n            )} */}\n          </div>\n        </div>\n        <br></br>\n\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <label>Token Symbol:</label>\n          </div>\n          <div className=\"col-9\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              autoComplete=\"off\"\n              // placeholder=\"Token Symbol\"\n              value={tokenSymbol}\n              name=\"tokensymbol\"\n              readonly\n            // onChange={(event) => setTokenSymbol(event.target.value)}\n            // ref={register({\n            //   required: \"Token Symbol is required\",\n            //   pattern: {\n            //     value: /^[a-zA-Z ]*$/,\n            //     message: \"Only Characters\",\n            //   },\n            // })}\n            />\n            {/* {errors.tokensymbol && (\n              <div className=\"form-error\">{errors.tokensymbol.message}.</div>\n            )} */}\n          </div>\n        </div>\n\n        <br></br>\n\n\n\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <label>Token Decimal:</label>\n          </div>\n          <div className=\"col-9\">\n            {\" \"}\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={tokenDecimal}\n              //  placeholder=\"Token Decimal\"\n              autoComplete=\"off\"\n              readonly\n            // onChange={(event) => setTokenDecimal(event.target.value)}\n            // name=\"tokendecimal\"\n            // ref={register({\n            //   required: \"Token Decimal is required\",\n            //   pattern: {\n            //     value: /^(0|[1-9][0-9]*)$/,\n            //     message: \"Only Numbers\",\n            //   },\n            // })}\n            />\n            {/* {errors.tokendecimal && (\n              <div className=\"form-error\">{errors.tokendecimal.message}.</div>\n            )} */}\n          </div>\n        </div>\n        <br></br>\n\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <label>Choose File:</label>\n          </div>\n          <div className=\"col-9\">\n            <input\n              type=\"file\"\n              className=\"form-control\"\n              placeholder=\"ImageURL\"\n              onChange={(event) => setTokenImg(event.target.files[0])}\n              name=\"imageurl\"\n              ref={register({\n                required: \"Token Image is required\",\n              })}\n            />\n            {errors.imageurl && (\n              <div className=\"form-error\">{errors.imageurl.message}.</div>\n            )}\n          </div>\n        </div>\n\n        <br></br>\n        <br></br>\n\n        <div align=\"center\">\n          <button className=\"btn\" style={{ background: \"#13316f\", color: \"white\", border: \"2px solid #13316f\" }} type=\"submit\">\n            Submit\n          </button>\n        </div>\n        <br></br>\n        <br></br>\n      </form>\n    </div>\n  );\n};\n\nexport default AddToken;\n"],"sourceRoot":""}