{"version":3,"sources":["views/pages/CMS/EditCMS.js"],"names":["editCmsUrl","helper","editCms","singleCms","EditCMS","match","useForm","mode","register","handleSubmit","errors","watch","reset","useState","title","setTitle","description","setDescription","history","useHistory","id","makeStyles","palette","buttonProgress","position","top","left","marginTop","marginLeft","useStyles","params","data","useEffect","postData","then","res","result","Heading","Detail","catch","err","toast","error","className","border","Body","onSubmit","data1","status","success","message","push","autoComplete","Group","Label","Control","type","placeholder","name","onChange","event","target","value","defaultValue","ref","required","activeClass","config","toolbarGroups","groups","removeButtons","fontSize_sizes","font_names","allowedContent","content","events","change","evt","newContent","editor","getData"],"mappings":"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","file":"static/js/62.dc64263e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { useForm } from \"react-hook-form\";\nimport helper from \"../../../helpers/axiosHelper\";\nimport CKEditor from \"react-ckeditor-component\";\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useHistory, useParams } from \"react-router\";\nimport { Col, Row, Card, Form, Button, ButtonGroup, Breadcrumb, Spinner, InputGroup, Dropdown } from '@themesberg/react-bootstrap';\n\nconst editCmsUrl = helper.editCms();\nconst singleCms = helper.singleCms();\n\n\nconst EditCMS = ({ match }) => {\n  const { register, handleSubmit, errors, watch, reset } = useForm({ mode: \"onBlur\", });\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  let history = useHistory();\n\n  const useStyles = makeStyles(({ palette, ...theme }) => ({\n    buttonProgress: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n  }))\n\n  const classes = useStyles()\n\n  let id = match.params.id;\n\n  let data = {\n    id: id,\n  }\n\n  const onSubmit = () => {\n    let data1 =\n    {\n      \"Heading\": title,\n      \"Detail\": description,\n      \"id\": id,\n    }\n\n    helper.postData(editCmsUrl, data1)\n      .then((res) => {\n\n        if (res.data.status == '200') {\n          toast.success(res.data.message);\n          history.push(\"/cms\");\n        }\n        else {\n          toast.error(res.message);\n        }\n      })\n  };\n\n  useEffect(() => {\n    helper.postData(singleCms, data)\n      .then((res) => {\n        setTitle(res.data.result.Heading);\n        setDescription(res.data.result.Detail);\n      })\n      .catch((err) => toast.error(err));\n  }, []);\n\n  const onChange = (evt) => {\n    var newContent = evt.editor.getData();\n    setDescription(newContent);\n  }\n\n\n  let config = {\n    toolbarGroups: [\n      { name: \"document\", groups: [\"mode\", \"document\", \"doctools\"] },\n      {\n        name: \"editing\",\n        groups: [\"find\", \"selection\", \"spellchecker\", \"editing\"]\n      },\n      { name: \"forms\", groups: [\"forms\"] },\n      { name: \"basicstyles\", groups: [\"basicstyles\", \"cleanup\"] },\n      {\n        name: \"paragraph\",\n        groups: [\"list\", \"indent\", \"blocks\", \"align\", \"bidi\", \"paragraph\"]\n      },\n      \"/\",\n      { name: \"links\", groups: [\"links\"] },\n      { name: \"insert\", groups: [\"insert\"] },\n      { name: \"styles\", groups: [\"styles\"] },\n      { name: \"colors\", groups: [\"colors\"] },\n      { name: \"tools\", groups: [\"tools\"] },\n      \"/\",\n      { name: \"clipboard\", groups: [\"clipboard\", \"undo\"] },\n      { name: \"others\", groups: [\"others\"] },\n      { name: \"about\", groups: [\"about\"] }\n    ],\n    removeButtons:\n      \"Save,NewPage,Preview,Print,Templates,Cut,Copy,Paste,PasteText,PasteFromWord,Find,SelectAll,Scayt,Replace,Form,Checkbox,Textarea,Select,Button,ImageButton,HiddenField,CreateDiv,BidiLtr,BidiRtl,Language,Flash,Smiley,SpecialChar,PageBreak,Iframe,Anchor,ShowBlocks,About,CopyFormatting,Undo,Redo\",\n    fontSize_sizes: \"16/16px;24/24px;48/48px;\",\n    font_names:\n      \"Arial/Arial, Helvetica, sans-serif;\" +\n      \"Times New Roman/Times New Roman, Times, serif;\" +\n      \"Verdana\",\n    allowedContent: true\n  };\n\n  return (\n    <div className=\"updatetoken-container\">\n      <h5>Edit CMS</h5>\n      <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\n        <Card.Body>\n          <h5 className=\"mb-4\">Edit CMS</h5>\n          <Form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)} autoComplete={\"off\"}>\n            {/* <Form.Group id=\"name\" className=\"mb-4\">\n              <Form.Label>Heading</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Title\" name=\"heading\" defaultValue={title} ref={register({ required: \"required\" })} />\n              {errors.heading && <p className=\"text-danger\">{errors.heading.message}</p>}\n            </Form.Group> */}\n            <Form.Group id=\"subject\" className=\"mb-4\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"title\" name=\"title\" onChange={(event) => setTitle(event.target.value)} defaultValue={title} ref={register({ required: \"required\" })} />\n              {errors.title && <p className=\"text-danger\">{errors.title.message}</p>}\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Content</Form.Label>\n              <CKEditor\n                activeClass=\"p10\"\n                config={config}\n                content={description}\n                events={{\n                  change: onChange\n                }}\n              />\n            </Form.Group>\n            <br />\n            <Form.Group>\n              <Button type=\"submit\" className=\"btn btn-primary\">Update</Button>\n            </Form.Group>\n          </Form>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default EditCMS;\n"],"sourceRoot":""}