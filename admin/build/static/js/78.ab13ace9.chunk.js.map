{"version":3,"sources":["views/pages/tokens/Tokens.js"],"names":["Tokens","useState","currencyListData","setCurrencyListData","React","pending","setPending","trigger","setTrigger","history","useHistory","data","columns","helper","currencyURL","name","cell","row","index","width","selector","sortable","props","src","tokenImg","height","Date","createdAt","toLocaleString","className","onClick","clickHandler","_id","id","ID","removeClick","push","axios","post","then","res","toast","success","err","error","currentChainId","useSelector","state","userReducer","useEffect","get","result","catch","align","style","background","color","border","pagination","progressPending","highlightOnHover","fixedHeader","subHeaderAlign"],"mappings":"0TAqKeA,UAvJA,WAEb,MAAgDC,mBAAS,IAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAA8BC,IAAMH,UAAS,GAA7C,mBAAOI,EAAP,KAAgBC,EAAhB,KAEA,EAA8BL,mBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACIC,EAAUC,cACRC,EAAOT,EAEPU,GADSC,IAAOC,cACN,CACd,CACEC,KAAM,OACNC,KAAM,SAACC,EAAKC,GAAN,OAAgBA,EAAQ,GAC9BC,MAAO,QAGT,CACEJ,KAAM,OACNK,SAAU,YACVC,UAAU,EACVF,MAAO,SAET,CACEJ,KAAM,SACNK,SAAU,cACVC,UAAU,EACVF,MAAO,SAET,CACEJ,KAAM,QACNK,SAAU,WACVC,UAAU,EACVL,KAAM,SAAAM,GAAK,OAAI,8BAAK,qBAAKC,IAAKD,EAAME,SAAUC,OAAO,YACrDN,MAAO,SAGT,CACEJ,KAAM,UACNK,SAAU,eACVC,UAAU,EACVF,MAAO,SAGT,CACEJ,KAAM,UACNK,SAAU,eACVC,UAAU,EACVF,MAAO,SAGT,CACEJ,KAAM,YACNK,SAAU,YACVC,UAAU,EACVL,KAAM,SAACC,GAAD,OACJ,qBAAK,WAAS,iBAAd,SACG,IAAIS,KAAKT,EAAIU,WAAWC,qBAI/B,CACEb,KAAM,SACNC,KAAM,SAACC,GAAD,OACJ,wBACEY,UAAU,yBACVC,QAAS,kBAAMC,EAAad,EAAIe,MAChCC,GAAIhB,EAAIiB,GAHV,SAKE,cAAC,IAAD,QAIN,CACEnB,KAAM,SACNC,KAAM,SAACC,GAAD,OACJ,wBACEY,UAAU,yBACVC,QAAS,kBAAMK,EAAYlB,EAAIe,MAC/BC,GAAIhB,EAAIiB,GAHV,SAME,cAAC,IAAD,UAMFH,EAAe,SAACE,GAEpBxB,EAAQ2B,KAAK,2BAA6BH,IAGtCE,EAAc,SAACF,GACnB,IAAItB,EAAO,CACTsB,GAAIA,GAENI,IAAMC,KAAK,0DAA2D3B,GACnE4B,MAAK,SAACC,GACLhC,EAAWD,EAAU,GACrBkC,IAAMC,QAAQ,iCAEfH,MAAK,SAACI,GAELF,IAAMG,MAAM,4BAKdC,EAAiBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYH,kBAE5DI,qBAAU,WACRZ,IACGa,IACC,oEAEDX,MAAK,SAACC,GACLrC,EAAoBqC,EAAI7B,KAAKwC,QAC7B7C,GAAW,MAEZ8C,OAAM,SAACT,GAAD,OAASF,IAAMG,MAAMD,QAC7B,CAACE,EAAgBtC,IAMpB,OACE,gCACE,+CACA,qBAAK8C,MAAM,QAAX,SACE,wBAAQxB,UAAU,MAAMyB,MAAO,CAAEC,WAAY,UAAWC,MAAO,QAASC,OAAQ,qBAAuB3B,QAR5F,WACfrB,EAAQ2B,KAAK,4BAOT,4BAIF,uBACA,gCACG,IACD,cAAC,IAAD,CACEzB,KAAMA,EACNC,QAASA,EACT8C,YAAY,EACZC,gBAAiBtD,EACjBuD,kBAAkB,EAClBC,aAAa,EACbC,eAAe","file":"static/js/78.ab13ace9.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useHistory } from \"react-router\";\nimport DataTable, { createTheme } from \"react-data-table-component\";\nimport axios from \"axios\";\nimport { FiEdit, FiMinus } from \"react-icons/fi\";\nimport { toast } from \"react-toastify\";\nimport helper from \"src/helpers/axiosHelper\";\n\nimport {\n  CSelect,\n} from '@coreui/react'\nimport { useSelector } from \"react-redux\";\n\nconst Tokens = () => {\n\n  const [currencyListData, setCurrencyListData] = useState([]);\n  const [pending, setPending] = React.useState(true);\n\n  const [trigger, setTrigger] = useState(1)\n  let history = useHistory();\n  const data = currencyListData;\n  const apiURL = helper.currencyURL()\n  const columns = [\n    {\n      name: \"S.No\",\n      cell: (row, index) => index + 1,\n      width: \"80px\"\n\n    },\n    {\n      name: \"Name\",\n      selector: \"tokenName\",\n      sortable: true,\n      width: \"100px\"\n    },\n    {\n      name: \"Symbol\",\n      selector: \"tokenSymbol\",\n      sortable: true,\n      width: \"100px\"\n    },\n    {\n      name: \"Image\",\n      selector: \"tokenImg\",\n      sortable: true,\n      cell: props => <div><img src={props.tokenImg} height=\"30px\" /></div>,\n      width: \"100px\"\n\n    },\n    {\n      name: \"Address\",\n      selector: \"tokenAddress\",\n      sortable: true,\n      width: \"300px\"\n\n    },\n    {\n      name: \"Decimal\",\n      selector: \"tokenDecimal\",\n      sortable: true,\n      width: \"100px\"\n\n    },\n    {\n      name: \"CreatedAt\",\n      selector: \"createdAt\",\n      sortable: true,\n      cell: (row) => (\n        <div data-tag=\"allowRowEvents\">\n          {new Date(row.createdAt).toLocaleString()}\n        </div>\n      ),\n    },\n    {\n      name: \"Action\",\n      cell: (row) => (\n        <button\n          className=\"btn btn-primary btn-sm\"\n          onClick={() => clickHandler(row._id)}\n          id={row.ID}\n        >\n          <FiEdit />\n        </button>\n      ),\n    },\n    {\n      name: \"Remove\",\n      cell: (row) => (\n        <button\n          className=\"btn btn-primary btn-sm\"\n          onClick={() => removeClick(row._id)}\n          id={row.ID}\n        >\n          {/* <h6>{row._id}</h6> */}\n          <FiMinus />\n        </button>\n      ),\n    },\n  ];\n\n  const clickHandler = (id) => {\n\n    history.push(\"/8q0MGEX8BL8fFOBZD0yjng/\" + id);\n  };\n\n  const removeClick = (id) => {\n    let data = {\n      id: id\n    }\n    axios.post(\"https://bakxlxiqwosd.pocketswap.org/api/currency/delete\", data)\n      .then((res) => {\n        setTrigger(trigger + 1)\n        toast.success(\"Token Removed Successfully\")\n      })\n      .then((err) => {\n\n        toast.error(\"Somethign went wrong\")\n      })\n\n  }\n\n  var currentChainId = useSelector(state => state.userReducer.currentChainId);\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://bakxlxiqwosd.pocketswap.org/api/currency/listallcurrency\"\n      )\n      .then((res) => {\n        setCurrencyListData(res.data.result);\n        setPending(false);\n      })\n      .catch((err) => toast.error(err));\n  }, [currentChainId, trigger]);\n\n  const AddToken = () => {\n    history.push(\"/e9T3S5K5XKHmMWxY8HJ2Ng\");\n  };\n\n  return (\n    <div>\n      <h5>Currency List</h5>\n      <div align=\"right\">\n        <button className=\"btn\" style={{ background: \"#13316f\", color: \"white\", border: \"2px solid #13316f\" }} onClick={AddToken}>\n          Add Currency\n        </button>\n      </div>\n      <br></br>\n      <div>\n        {\" \"}\n        <DataTable\n          data={data}\n          columns={columns}\n          pagination={true}\n          progressPending={pending}\n          highlightOnHover={true}\n          fixedHeader={true}\n          subHeaderAlign=\"right\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Tokens;\n"],"sourceRoot":""}