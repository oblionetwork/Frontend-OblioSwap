{"version":3,"sources":["views/pages/tokens/updateToken.js"],"names":["helper","currencyURL","UpdateToken","match","useSelector","state","userReducer","currentChainId","useForm","mode","register","handleSubmit","errors","reset","watch","useState","setTokenType","tokenName","setTokenName","tokenAddress","setTokenAddress","tokenDecimal","setTokenDecimal","tokenImg","setTokenImg","tokenSymbol","setTokenSymbol","useEffect","axios","get","params","id","then","res","data","result","tokenType","catch","err","toast","error","className","onSubmit","formData","FormData","set","append","postData","headers","status","success","message","type","name","value","placeholder","onChange","event","target","ref","required","pattern","tokenname","tokensymbol","tokenaddress","tokendecimal","src","alt","height","width","files","imageurl","align"],"mappings":"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","file":"static/js/79.e870bfcb.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { useForm } from \"react-hook-form\";\nimport helper from \"../../../helpers/axiosHelper\";\nimport { useSelector } from \"react-redux\";\n\nconst apiURL = helper.currencyURL();\nconst UpdateToken = ({ match }) => {\n\n  var currentChainId = useSelector(state => state.userReducer.currentChainId);\n\n  const { register, handleSubmit, errors, watch, reset } = useForm({\n    mode: \"onBlur\",\n  });\n\n  const [tokenType, setTokenType] = useState(\"\");\n  const [tokenName, setTokenName] = useState(\"\");\n  const [tokenAddress, setTokenAddress] = useState(\"\");\n  const [tokenDecimal, setTokenDecimal] = useState(\"\");\n  const [tokenImg, setTokenImg] = useState(\"\");\n  const [tokenSymbol, setTokenSymbol] = useState(\"\");\n\n  const handleTokenType = (event) => {\n    var selectedType = event.target.value;\n    setTokenType(selectedType);\n  };\n\n  const onSubmit = () => {\n\n    var formData = new FormData();\n\n    formData.set(\"myImage\", tokenImg)\n    formData.append(\"tokenName\", tokenName)\n    formData.append(\"tokenAddress\", tokenAddress)\n    formData.append(\"tokenDecimal\", tokenDecimal)\n    formData.append(\"tokenSymbol\", tokenSymbol)\n    formData.append(\"id\", match.params.id)\n\n    const headers = {\n      'content-type': 'multipart/form-data'\n    };\n\n    helper\n      .postData(\"https://bakxlxiqwosd.pocketswap.org/api/currency/updatecurrency\", formData, { headers })\n      .then((res) => {\n        if (res.data.status == 200) {\n          toast.success(res.data.message);\n          reset();\n        } else {\n          toast.error(res.data.message);\n        }\n      })\n      .catch((err) => {\n        toast.error(err);\n      });\n  };\n  useEffect(() => {\n    axios\n      .get(\n\"https://bakxlxiqwosd.pocketswap.org/api/currency/getcurrency/\"+\n        match.params.id\n      )\n      .then((res) => {\n        setTokenType(res.data.result.tokenType);\n        setTokenName(res.data.result.tokenName);\n        setTokenSymbol(res.data.result.tokenSymbol);\n        setTokenAddress(res.data.result.tokenAddress);\n        setTokenDecimal(res.data.result.tokenDecimal);\n        setTokenImg(res.data.result.tokenImg);\n      })\n      .catch((err) => toast.error(err));\n  }, []);\n  return (\n    <div className=\"updatetoken-container\">\n      <h5>Update Currency</h5>\n\n      <br></br>\n      <form className=\"form-class\" onSubmit={handleSubmit(onSubmit)}>\n        <br></br>\n\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <label>Token Name:</label>\n          </div>\n          <div className=\"col-9\">\n            <input\n              type=\"text\"\n              name=\"tokenname\"\n              value={tokenName}\n              className=\"form-control\"\n              placeholder=\"Token Name\"\n              onChange={(event) => setTokenName(event.target.value)}\n              ref={register({\n                required: \"Token Name is required\",\n                pattern: {\n                  value: /^[A-Za-z0-9]*$/,\n                  message: \"Only Characters\",\n                },\n              })}\n            />\n            {errors.tokenname && (\n              <div className=\"form-error\">{errors.tokenname.message}.</div>\n            )}\n          </div>\n        </div>\n        <br></br>\n\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <label>Token Symbol:</label>\n          </div>\n          <div className=\"col-9\">\n            <input\n              type=\"text\"\n              value={tokenSymbol}\n              className=\"form-control\"\n              placeholder=\"Token Symbol\"\n              name=\"tokensymbol\"\n              onChange={(event) => setTokenSymbol(event.target.value)}\n              ref={register({\n                required: \"Token Symbol is required\",\n                pattern: {\n                  value: /^[A-Za-z0-9]*$/,\n                  message: \"Only Characters\",\n                },\n              })}\n            />\n            {errors.tokensymbol && (\n              <div className=\"form-error\">{errors.tokensymbol.message}.</div>\n            )}\n          </div>\n        </div>\n\n        <br></br>\n\n        <div className=\"row\">\n          <div className=\"col-3\">\n            {\" \"}\n            <label>Token Address:</label>\n          </div>\n          <div className=\"col-9\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Token Address\"\n              value={tokenAddress}\n              name=\"tokenaddress\"\n              onChange={(event) => setTokenAddress(event.target.value)}\n              ref={register({\n                required: \"Token Address is required\",\n                pattern: {\n                  value: /^0x[a-fA-F0-9]{40}$/,\n                  message: \"Only Characters\",\n                },\n              })}\n            />\n            {errors.tokenaddress && (\n              <div className=\"form-error\">{errors.tokenaddress.message}.</div>\n            )}\n          </div>\n        </div>\n        <br></br>\n\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <label>Token Decimal:</label>\n          </div>\n          <div className=\"col-9\">\n            {\" \"}\n            <input\n              type=\"text\"\n              value={tokenDecimal}\n              className=\"form-control\"\n              placeholder=\"Token Decimal\"\n              onChange={(event) => setTokenDecimal(event.target.value)}\n              name=\"tokendecimal\"\n              ref={register({\n                required: \"Token Decimal is required\",\n                pattern: {\n                  value: /^(0|[1-9][0-9]*)$/,\n                  message: \"Only Numbers\",\n                },\n              })}\n            />\n            {errors.tokendecimal && (\n              <div className=\"form-error\">{errors.tokendecimal.message}.</div>\n            )}\n          </div>\n        </div>\n        <br></br>\n\n        <div className=\"row\">\n          <div className=\"col-3\"><label>Existing Image:</label></div>\n          <div className=\"col-9\"><img src={tokenImg} alt=\"Token Image\" height=\"50px\" width=\"50px\" /></div>\n        </div>\n        <br></br>\n\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <label>Choose Image:</label>\n          </div>\n          <div className=\"col-9\">\n            <input\n              type=\"file\"\n              className=\"form-control\"\n              placeholder=\"ImageURL\"\n              onChange={(event) => setTokenImg(event.target.files[0])}\n              name=\"imageurl\"\n              ref={register({\n                required: \"Image URL is required\",\n              })}\n            />\n            {errors.imageurl && (\n              <div className=\"form-error\">{errors.imageurl.message}.</div>\n            )}\n          </div>\n        </div>\n\n        <br></br>\n        <br></br>\n\n        <div align=\"center\">\n          <button className=\"btn btn-primary\" type=\"submit\">\n            Update\n          </button>\n        </div>\n        <br></br>\n        <br></br>\n      </form>\n    </div>\n  );\n};\n\nexport default UpdateToken;\n"],"sourceRoot":""}