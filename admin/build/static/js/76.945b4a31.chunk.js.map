{"version":3,"sources":["views/pages/security/TFAPage.js"],"names":["TFAPage","useForm","mode","register","handleSubmit","errors","history","watch","reset","useHistory","useState","sixDigitCode","setSixDigitCode","securityURL","helper","className","onSubmit","data","axios","post","then","res","status","toast","success","message","localStorage","setItem","JSON","stringify","id","push","error","catch","err","type","placeholder","name","autoComplete","onChange","event","target","value","ref","required","pattern","tfacode","align","style","background","color","border"],"mappings":"gRAuEeA,UA/DC,WACd,MAAyDC,YAAQ,CAC/DC,KAAM,WADAC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,OAG5BC,GAHJ,EAAwCC,MAAxC,EAA+CC,MAGjCC,eACd,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcC,IAAOD,cAuB3B,OACE,qBAAKE,UAAU,iBAAf,SACE,uBAAMA,UAAU,aAAaC,SAAUZ,GAvB1B,WACf,IAAIa,EAAO,CACTN,aAAcA,GAEhBO,IACGC,KACCN,EAAc,aACdI,GAEDG,MAAK,SAACC,GACkB,KAAnBA,EAAIJ,KAAKK,QACXC,IAAMC,QAAQH,EAAIJ,KAAKQ,SACvBC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUR,EAAIJ,OAChDS,aAAaC,QAAQ,KAAMN,EAAIJ,KAAKa,IACpCxB,EAAQyB,KAAK,4BAEbR,IAAMS,MAAMX,EAAIJ,KAAKQ,YAGxBQ,OAAM,SAACC,GAAD,OAASX,IAAMS,MAAME,SAI5B,UACE,2DACA,qDACA,yFACA,uBACEC,KAAK,OACLpB,UAAU,eACVqB,YAAY,sBACZC,KAAK,UACLC,aAAa,MACbC,SAAU,SAACC,GAAD,OAAW5B,EAAgB4B,EAAMC,OAAOC,QAClDC,IAAKxC,EAAS,CACZyC,SAAU,uBACVC,QAAS,CACPH,MAAO,2BACPjB,QAAS,qBAIdpB,EAAOyC,SACN,sBAAK/B,UAAU,aAAf,UAA6BV,EAAOyC,QAAQrB,QAA5C,OAGF,uBACA,qBAAKsB,MAAM,SAAX,SACE,wBAAQhC,UAAU,MAAMiC,MAAO,CAAEC,WAAY,UAAWC,MAAO,QAASC,OAAQ,qBAAhF","file":"static/js/76.945b4a31.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router\";\nimport helper from \"src/helpers/axiosHelper\";\n\nconst TFAPage = () => {\n  const { register, handleSubmit, errors, watch, reset } = useForm({\n    mode: \"onBlur\",\n  });\n  let history = useHistory();\n  const [sixDigitCode, setSixDigitCode] = useState(false);\n  const securityURL = helper.securityURL()\n\n  const onSubmit = () => {\n    let data = {\n      sixDigitCode: sixDigitCode,\n    };\n    axios\n      .post(\n        securityURL + \"/verifyotp\",\n        data\n      )\n      .then((res) => {\n        if (res.data.status == 200) {\n          toast.success(res.data.message);\n          localStorage.setItem(\"auth\", JSON.stringify(res.data));\n          localStorage.setItem(\"id\", res.data.id);\n          history.push(\"/32Ygwi0SI34xf9e0CnspEA\");\n        } else {\n          toast.error(res.data.message);\n        }\n      })\n      .catch((err) => toast.error(err));\n  };\n  return (\n    <div className=\"container mt-5\">\n      <form className=\"form-class\" onSubmit={handleSubmit(onSubmit)}>\n        <h5>Two Factor Authentication</h5>\n        <p>Enter time-based OTP</p>\n        <p>Please Enter the OTP generated on your authenticator app</p>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Enter Your TFA Code\"\n          name=\"tfacode\"\n          autoComplete=\"off\"\n          onChange={(event) => setSixDigitCode(event.target.value)}\n          ref={register({\n            required: \"TFA Code is required\",\n            pattern: {\n              value: /^(\\+\\d{1,3}[- ]?)?\\d{6}$/,\n              message: \"Only 6 Digits\",\n            },\n          })}\n        />\n        {errors.tfacode && (\n          <div className=\"form-error\">{errors.tfacode.message}.</div>\n        )}\n\n        <br></br>\n        <div align=\"center\">\n          <button className=\"btn\" style={{ background: \"#13316f\", color: \"white\", border: \"2px solid #13316f\" }}>Proceed</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default TFAPage;\n"],"sourceRoot":""}