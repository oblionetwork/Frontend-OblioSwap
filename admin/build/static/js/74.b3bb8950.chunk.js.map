{"version":3,"sources":["views/pages/pool/listPool.js"],"names":["ListPool","history","useHistory","useState","poolData","setPoolData","React","pending","setPending","apiURL","helper","poolURL","useEffect","axios","get","then","res","data","result","catch","err","toast","error","columns","name","cell","row","index","width","selector","sortable","props","src","fromTokenImg","height","className","onClick","clickHandler","_id","id","ID","style","marginTop","marginBottom","poolStatus","post","status","success","message","console","align","background","color","border","push","pagination","progressPending","highlightOnHover","fixedHeader","subHeaderAlign"],"mappings":"gSA4IeA,UApIE,WAEf,IAAIC,EAAUC,cACd,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BC,IAAMH,UAAS,GAA7C,mBAAOI,EAAP,KAAgBC,EAAhB,KACMC,EAASC,IAAOC,UAEtBC,qBAAU,WACRC,IACGC,IAAIL,EAAS,iBACbM,MAAK,SAACC,GACLX,EAAYW,EAAIC,KAAKC,QACrBV,GAAW,MAEZW,OAAM,SAACC,GAAD,OAASC,IAAMC,MAAMF,QAC7B,IAEH,IAAMH,EAAOb,EACPmB,EAAU,CACd,CACEC,KAAM,OACNC,KAAM,SAACC,EAAKC,GAAN,OAAgBA,EAAQ,GAC9BC,MAAO,QAET,CACEJ,KAAM,gBACNK,SAAU,kBACVC,UAAU,EACVF,MAAO,SAET,CACEJ,KAAM,aACNK,SAAU,eACVC,UAAU,EACVL,KAAM,SAAAM,GAAK,OAAI,8BAAK,qBAAKC,IAAKD,EAAME,aAAcC,OAAO,YACzDN,MAAO,SAET,CACEJ,KAAM,MACNK,SAAU,MACVC,UAAU,EACVF,MAAO,QAET,CACEJ,KAAM,WACNK,SAAU,cACVC,UAAU,GAEZ,CACEN,KAAM,UACNK,SAAU,SACVC,UAAU,EACVF,MAAO,QAET,CACEJ,KAAM,WACNK,SAAU,cACVC,UAAU,EACVF,MAAO,SAET,CACEJ,KAAM,eACNK,SAAU,cACVC,UAAU,GAEZ,CACEN,KAAM,SACNK,SAAU,cAEZ,CACEL,KAAM,SACNC,KAAM,SAACC,GAAD,OACJ,wBACES,UAAU,yBACVC,QAAS,kBAAMC,EAAaX,EAAIY,MAChCC,GAAIb,EAAIc,GACRC,MAAO,CAAEP,OAAQ,OAAQN,MAAO,OAAQc,UAAW,SAAUC,aAAc,UAJ7E,8BAYAN,EAAe,SAACE,GAGpB,IAAItB,EAAO,CACTsB,GAAIA,EACJK,WAAY,UAEd/B,IACGgC,KAAKpC,EAAS,oBAAqBQ,GACnCF,MAAK,SAAAC,GACmB,KAAnBA,EAAIC,KAAK6B,OACXzB,IAAM0B,QAAQ/B,EAAIC,KAAK+B,SAGvB3B,IAAMC,MAAMN,EAAIC,KAAK+B,YAGxB7B,OAAM,SAAAC,GAAG,OAAI6B,QAAQ3B,MAAMF,OAKhC,OACE,sBAAKe,UAAU,qBAAf,UACE,4CACA,sBAAKe,MAAM,QAAX,UACE,wBAAQf,UAAU,MAAMM,MAAO,CAAEU,WAAY,UAAWC,MAAO,QAASC,OAAQ,qBAAuBjB,QAP7F,WACdnC,EAAQqD,KAAK,4BAMT,sBAGA,uBACA,0BAEF,gCACG,IACD,cAAC,IAAD,CACErC,KAAMA,EACNM,QAASA,EACTgC,YAAY,EACZC,gBAAiBjD,EACjBkD,kBAAkB,EAClBC,aAAa,EACbC,eAAe","file":"static/js/74.b3bb8950.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router\";\nimport DataTable, { createTheme } from \"react-data-table-component\";\nimport helper from \"src/helpers/axiosHelper\";\n\nconst ListPool = () => {\n\n  let history = useHistory();\n  const [poolData, setPoolData] = useState([]);\n  const [pending, setPending] = React.useState(true);\n  const apiURL = helper.poolURL()\n\n  useEffect(() => {\n    axios\n      .get(apiURL + \"/listpooldata\")\n      .then((res) => {\n        setPoolData(res.data.result);\n        setPending(false);\n      })\n      .catch((err) => toast.error(err));\n  }, []);\n\n  const data = poolData;\n  const columns = [\n    {\n      name: \"S.No\",\n      cell: (row, index) => index + 1,\n      width: \"80px\",\n    },\n    {\n      name: \" Token Symbol\",\n      selector: \"fromTokenSymbol\",\n      sortable: true,\n      width: \"140px\",\n    },\n    {\n      name: \" Token Img\",\n      selector: \"fromTokenImg\",\n      sortable: true,\n      cell: props => <div><img src={props.fromTokenImg} height=\"30px\" /></div>,\n      width: \"180px\",\n    },\n    {\n      name: \"APR\",\n      selector: \"APR\",\n      sortable: true,\n      width: \"80px\",\n    },\n    {\n      name: \" Address\",\n      selector: \"fromAddress\",\n      sortable: true,\n    },\n    {\n      name: \"Pair ID\",\n      selector: \"pairId\",\n      sortable: true,\n      width: \"90px\",\n    },\n    {\n      name: \" Decimal\",\n      selector: \"fromDecimal\",\n      sortable: true,\n      width: \"100px\",\n    },\n    {\n      name: \"Reward Token\",\n      selector: \"RewardToken\",\n      sortable: true,\n    },\n    {\n      name: \"Status\",\n      selector: \"poolStatus\"\n    },\n    {\n      name: \"Action\",\n      cell: (row) => (\n        <button\n          className=\"btn btn-primary btn-sm\"\n          onClick={() => clickHandler(row._id)}\n          id={row.ID}\n          style={{ height: \"50px\", width: \"90px\", marginTop: \"0.5rem\", marginBottom: \"0.5rem\" }}\n        >\n          Change Status\n        </button>\n      ),\n    },\n  ];\n\n  const clickHandler = (id) => {\n\n\n    let data = {\n      id: id,\n      poolStatus: \"Closed\"\n    }\n    axios\n      .post(apiURL + \"/updatepoolstatus\", data)\n      .then(res => {\n        if (res.data.status == 200) {\n          toast.success(res.data.message);\n        }\n        else {\n          toast.error(res.data.message)\n        }\n      })\n      .catch(err => console.error(err));\n  }\n  const addPool = () => {\n    history.push(\"/CUkDJgmWwv0V+HIYRj0oqw\");\n  };\n  return (\n    <div className=\"listpool-container\">\n      <h5> Pool List</h5>\n      <div align=\"right\">\n        <button className=\"btn\" style={{ background: \"#680e9c\", color: \"white\", border: \"2px solid #994ac0\" }} onClick={addPool}>\n          Add Pool\n        </button>\n        <br></br>\n        <br></br>\n      </div>\n      <div>\n        {\" \"}\n        <DataTable\n          data={data}\n          columns={columns}\n          pagination={true}\n          progressPending={pending}\n          highlightOnHover={true}\n          fixedHeader={true}\n          subHeaderAlign=\"right\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ListPool;\n"],"sourceRoot":""}