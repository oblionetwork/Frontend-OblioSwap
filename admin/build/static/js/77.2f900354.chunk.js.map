{"version":3,"sources":["views/pages/site settings/SiteSettings.js"],"names":["SiteSettings","useForm","mode","register","handleSubmit","errors","reset","watch","useState","siteName","setSiteName","copyRightsText","setCopyRightsText","telegramURL","setTelegramURL","linkedinURL","setLinkedinURL","hackenURL","setHackenURL","twitterURL","setTwitterURL","gitURL","setGitURL","id","setId","apiURL","helper","siteSettingsURL","useEffect","axios","get","then","res","data","result","_id","catch","err","toast","error","className","onSubmit","siteData","post","status","success","message","type","placeholder","autoComplete","value","onChange","event","target","name","ref","required","pattern","sitename","copyrightstext","linkedinurl","telegramurl","hackenurl","twitterurl","align","style","background","color","border"],"mappings":"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","file":"static/js/77.2f900354.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport helper from \"src/helpers/axiosHelper\";\n\nconst SiteSettings = () => {\n  const { register, handleSubmit, errors, watch, reset } = useForm({\n    mode: \"onBlur\",\n  });\n  const [siteName, setSiteName] = useState(\"\");\n  const [copyRightsText, setCopyRightsText] = useState(\"\");\n  const [telegramURL, setTelegramURL] = useState(\"\");\n  const [linkedinURL, setLinkedinURL] = useState(\"\");\n  const [hackenURL, setHackenURL] = useState(\"\");\n  const [twitterURL, setTwitterURL] = useState(\"\");\n  const [gitURL, setGitURL] = useState(\"\");\n  const [id, setId] = useState(\"\");\n\n  const apiURL = helper.siteSettingsURL()\n\n  useEffect(() => {\n    axios.get(apiURL + \"sitesettings/getsitesettings\")\n      .then((res) => {\n        setSiteName(res.data.result.siteName);\n        setCopyRightsText(res.data.result.copyRightsText);\n        setTelegramURL(res.data.result.telegramURL);\n        setTwitterURL(res.data.result.twitterURL);\n        setGitURL(res.data.result.gitURL);\n        setHackenURL(res.data.result.hackenURL);\n        setLinkedinURL(res.data.result.linkedinURL);\n        setId(res.data.result._id);\n      })\n      .catch((err) => toast.error(err));\n  }, []);\n\n  const onSubmit = () => {\n    let siteData = {\n      siteName: siteName,\n      copyRightsText: copyRightsText,\n      telegramURL: telegramURL,\n      twitterURL: twitterURL,\n      gitURL: gitURL,\n      linkedinURL: linkedinURL,\n      hackenURL: hackenURL,\n      id: id\n    };\n    \n    axios.post(apiURL + \"/sitesettings\",siteData)\n      .then((res) => {\n        if (res.data.status == 200) {\n          toast.success(res.data.message);\n          reset();\n        } else {\n          toast.error(res.data.message);\n        }\n      })\n      .catch((err) => toast.error(err));\n  };\n\n  return (\n    <div className=\"settings-container mt-5\">\n      <h5>Site Settings</h5>\n      <form className=\"form-class\" onSubmit={handleSubmit(onSubmit)}>\n        <br></br>\n\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <label>Site Name:</label>\n          </div>\n          <div className=\"col-9\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Site Name\"\n              autoComplete=\"off\"\n              value={siteName}\n              onChange={(event) => setSiteName(event.target.value)}\n              name=\"sitename\"\n              ref={register({\n                required: \"Site Name is required\",\n                pattern: {\n                  value: /^[a-zA-Z ]*$/,\n                  message: \"Only Characters\",\n                },\n              })}\n            />\n            {errors.sitename && (\n              <div className=\"form-error\">{errors.sitename.message}.</div>\n            )}\n          </div>\n        </div>\n\n        <br></br>\n\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <label>Copyrights Text:</label>\n          </div>\n          <div className=\"col-9\">\n            <input\n              type=\"text\"\n              autoComplete=\"off\"\n              className=\"form-control\"\n              onChange={(event) => setCopyRightsText(event.target.value)}\n              placeholder=\"Copyrights Text\"\n              value={copyRightsText}\n              name=\"copyrightstext\"\n              ref={register({\n                required: \"CopyRight Text is required\",\n\n              })}\n            />\n            {errors.copyrightstext && (\n              <div className=\"form-error\">{errors.copyrightstext.message}.</div>\n            )}\n          </div>\n        </div>\n        <br></br>\n        <h5>Social Media</h5>\n        <br></br>\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <label>Linkedin URL:</label>\n          </div>\n          <div className=\"col-9\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              autoComplete=\"off\"\n              placeholder=\"FaceBook URL\"\n              value={linkedinURL}\n              onChange={(event) => setLinkedinURL(event.target.value)}\n              name=\"linkedinurl\"\n              ref={register({\n                required: \"Linkedin URL is required\",\n                pattern: {\n                  value:\n                    /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/,\n                  message: \"Should Match URL Pattern\",\n                },\n              })}\n            />\n            {errors.linkedinurl && (\n              <div className=\"form-error\">{errors.linkedinurl.message}.</div>\n            )}\n          </div>\n        </div>\n\n        <br></br>\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <label>Git URL:</label>\n          </div>\n          <div className=\"col-9\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              autoComplete=\"off\"\n              placeholder=\"Medium URL\"\n              value={gitURL}\n              onChange={(event) => setGitURL(event.target.value)}\n              name=\"gitURL\"\n              ref={register({\n                required: \"Git URL is required\",\n                pattern: {\n                  value:\n                    /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/,\n                  message: \"Should Match URL Pattern\",\n                },\n              })}\n            />\n            {errors.gitURL && (\n              <div className=\"form-error\">{errors.gitURL.message}.</div>\n            )}\n          </div>\n        </div>\n\n        <br></br>\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <label>Telegram URL:</label>\n          </div>\n          <div className=\"col-9\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              autoComplete=\"off\"\n              placeholder=\"Telegram URL\"\n              value={telegramURL}\n              onChange={(event) => setTelegramURL(event.target.value)}\n              name=\"telegramurl\"\n              ref={register({\n                required: \"Telegram URL is required\",\n                pattern: {\n                  value:\n                    /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/,\n                  message: \"Should Match URL Pattern\",\n                },\n              })}\n            />\n            {errors.telegramurl && (\n              <div className=\"form-error\">{errors.telegramurl.message}.</div>\n            )}\n          </div>\n        </div>\n        <br></br>\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <label>Hacken URL:</label>\n          </div>\n          <div className=\"col-9\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Hackedn URL\"\n              autoComplete=\"off\"\n              name=\"hackenurl\"\n              value={hackenURL}\n              onChange={(event) => setHackenURL(event.target.value)}\n              ref={register({\n                required: \"Hacken URL is required\",\n                pattern: {\n                  value:\n                    /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/,\n                  message: \"Should Match URL Pattern\",\n                },\n              })}\n            />\n            {errors.hackenurl && (\n              <div className=\"form-error\">{errors.hackenurl.message}.</div>\n            )}\n          </div>\n        </div>\n        <br></br>\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <label>Twitter URL:</label>\n          </div>\n          <div className=\"col-9\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              autoComplete=\"off\"\n              value={twitterURL}\n              placeholder=\"Twitter URL\"\n              onChange={(event) => setTwitterURL(event.target.value)}\n              name=\"twitterurl\"\n              ref={register({\n                required: \"Twitter URL is required\",\n                pattern: {\n                  value:\n                    /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/,\n                  message: \"Should Match URL Pattern\",\n                },\n              })}\n            />\n            {errors.twitterurl && (\n              <div className=\"form-error\">{errors.twitterurl.message}.</div>\n            )}\n          </div>\n        </div>\n\n        <br></br>\n        <br></br>\n\n        <div align=\"center\">\n          <button className=\"btn\" style={{ background: \"#13316f\", color: \"white\", border: \"2px solid #13316f\" }}>Submit</button>\n        </div>\n\n        <br></br>\n        <br></br>\n      </form>\n    </div>\n  );\n};\n\nexport default SiteSettings;\n"],"sourceRoot":""}