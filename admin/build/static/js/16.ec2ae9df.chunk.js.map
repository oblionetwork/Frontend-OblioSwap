{"version":3,"sources":["views/pages/pairs/AddPairs.js","views/pages/Addresses/Address.js"],"names":["Web3","require","web3","window","ethereum","apiURL","helper","pairsURL","currencyURL","AddPairs","useForm","mode","register","handleSubmit","errors","reset","watch","useState","listCurrencies","setListCurrencies","listCurrenciesTwo","setListCurrenciesTwo","selectedToken","setSelectedToken","selectedOppToken","setSelectedOppToken","tokenAAddress","setTokenAAddress","tokenBAddress","setTokenBAddress","tokenAAmount","setTokenAAmount","tokenBAmount","setTokenBAmount","address","setAddress","active","setActive","setMessage","useDispatch","color","override","css","dead_time","time1","deadline","Math","floor","Date","now","parseInt","toString","useEffect","connectMetaMask","axios","get","then","res","data","result","tokenName","default_token","filtered","filter","temp","catch","err","toast","error","apiCall","addPairData","tokenA","tokenB","postData","status","success","message","a","enable","eth","getAccounts","accounts","admin_address","getBalance","on","Contract_Liquidity","Contract","LiquidityABI","liquidity_address","approve_fn1","ApproveABI","approve_fn2","from_amount","to_amount","amountConvert","amount","decimal","type","coinwei","pow","sendAmount","getNumber","x","e","abs","split","Array","join","substring","Number","isInteger","className","spinner","size","onSubmit","utils","isAddress","b","methods","decimals","call","deci1","deci2","approve","send","from","hash","addLiquidity","alert","onChange","event","selectedtoken","target","value","map","dat","tokenAddress","name","ref","required","length","index","selected","tokenone","selectedopptoken","oppositetoken","placeholder","autoComplete","readonly","pattern","tokenaaddress","tokenbaddress","tokenaamount","tokenbamount","align","style","background","border","collar_address","router_address"],"mappings":"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","file":"static/js/16.ec2ae9df.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport helper from \"src/helpers/axiosHelper\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { css } from \"@emotion/react\";\nimport { admin_address, router_address, liquidity_address } from \"../Addresses/Address\";\nimport RouterABI from \"../../../Abi/router_contract.json\"\nimport ApproveABI from \"../../../Abi/approve_abi.json\"\nimport LiquidityABI from \"../../../Abi/liqudity_abi.json\"\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { enableLoader, loaderText } from \"../../../Actions/Actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Web3 = require(\"web3\");\nconst web3 = new Web3(window.ethereum);\nconst apiURL = helper.pairsURL();\nconst currencyURL = helper.currencyURL()\n\nconst AddPairs = () => {\n\n  const { register, handleSubmit, errors, watch, reset } = useForm({\n    mode: \"onBlur\",\n  });\n  const [listCurrencies, setListCurrencies] = useState([]);\n  const [listCurrenciesTwo, setListCurrenciesTwo] = useState([]);\n  const [selectedToken, setSelectedToken] = useState(\"\");\n  const [selectedOppToken, setSelectedOppToken] = useState(\"\");\n  const [tokenAAddress, setTokenAAddress] = useState(\"0x8cA9D2772CCB6b13574244A81A27FeeB1aBCF59F\");\n  const [tokenBAddress, setTokenBAddress] = useState(\"0xa36085F69e2889c224210F603D836748e7dC0088\");\n  const [tokenAAmount, setTokenAAmount] = useState(\"\");\n  const [tokenBAmount, setTokenBAmount] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [active, setActive] = useState(false);\n\n  const [message, setMessage] = useState(\"Please Connect Metamask\")\n  const dispatch = useDispatch()\n\n  let [color, setColor] = useState(\"#0d6efd\");\n  const override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n    z-index: 5;\n  `;\n\n  var time = Math.floor(Date.now() / 1000);\n  var time1 = 50;\n  var dead_time = time1 > 0 ? time1 * 60000 : 1 * 60000;\n  dead_time = parseInt(dead_time);\n  var deadline = (time + dead_time).toString();\n  useEffect(() => {\n    connectMetaMask();\n  }, [address]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://bakxlxiqwosd.pocketswap.org/api/currency/listallcurrency\")\n      .then((res) => {\n        setListCurrencies(res.data.result);\n        setSelectedToken(res.data.result[0].tokenName);\n        let default_token = res.data.result[0].tokenName;\n        let filtered = res.data.result.filter(\n          (temp) => temp.tokenName != default_token\n        );\n        setListCurrenciesTwo(filtered);\n      })\n      .catch((err) => toast.error(err));\n  }, []);\n\n  const apiCall = () => {\n    let addPairData = {\n      tokenA: selectedToken,\n      tokenB: selectedOppToken,\n      tokenAAddress: tokenAAddress,\n      tokenBAddress: tokenBAddress,\n      tokenAAmount: tokenAAmount,\n      tokenBAmount: tokenBAmount,\n    };\n    helper\n      .postData(apiURL + \"/addpair\", addPairData)\n      .then((res) => {\n        if (res.data.status == 200) {\n          toast.success(res.data.message);\n          reset();\n        } else {\n          toast.error(res.data.message);\n        }\n      })\n      .catch((err) => {\n        toast.error(err);\n      });\n  };\n\n  const connectMetaMask = async () => {\n    setActive(true);\n    setMessage(\"Please Connect Metamask\")\n    if (typeof window.ethereum !== \"undefined\") {\n      var web3 = new Web3(window.ethereum);\n      try {\n        await window.ethereum.enable();\n        const accounts = await web3.eth.getAccounts();\n        if (accounts[0] === admin_address) {\n          setAddress(accounts[0]);\n          setActive(false);\n        }\n        const balance = await web3.eth.getBalance(accounts[0]);\n        window.web3 = await new Web3(window.ethereum);\n\n        return true;\n      } catch (e) {\n        toast.error(e.message);\n        return false;\n      }\n    } else {\n      toast.error(\"Please Connect Metamask\");\n    }\n  }\n\n\n  var accounts = window.ethereum.enable();\n  window.ethereum.on('accountsChanged', function (accounts) {\n    connectMetaMask();\n\n  })\n\n\n\n\n  const handleToken = (event) => {\n    var selectedtoken = event.target.value;\n    setSelectedToken(selectedtoken);\n\n    // let filtered = listCurrencies.filter(\n    //   (temp) => temp.tokenName != event.target.value\n    // );\n    listCurrencies.map((dat) => {\n      if (dat.tokenName === event.target.value) {\n\n        setTokenAAddress(dat.tokenAddress)\n      }\n\n    })\n    // setListCurrenciesTwo(filtered);\n  };\n  useEffect(() => {\n    if (selectedOppToken === selectedToken) {\n      setSelectedToken(\"Xpocket\")\n      setSelectedOppToken(\"Link\")\n      setTokenAAddress(\"0x8cA9D2772CCB6b13574244A81A27FeeB1aBCF59F\")\n      setTokenBAddress(\"0xa36085F69e2889c224210F603D836748e7dC0088\")\n    }\n\n  }, [selectedOppToken, selectedToken])\n\n  const handleOppositeToken = (event) => {\n    var selectedopptoken = event.target.value;\n    setSelectedOppToken(selectedopptoken);\n    listCurrencies.map((dat) => {\n      if (dat.tokenName === event.target.value) {\n\n        setTokenBAddress(dat.tokenAddress)\n      }\n    })\n  };\n\n  const onSumit = async () => {\n    dispatch(enableLoader(true))\n    dispatch(loaderText(\"Loading......\"))\n    let pancakeRouter = new window.web3.eth.Contract(\n      RouterABI,\n      router_address\n    );\n\n    let LiquidityRouter = new window.web3.eth.Contract(ApproveABI, tokenAAddress);\n\n    let LiquidityRouterTwo = new window.web3.eth.Contract(\n      ApproveABI,\n      tokenBAddress\n    );\n\n    if (selectedToken == \"ETH\" || selectedOppToken == \"ETH\") {\n\n      let aAmount = parseFloat(tokenAAmount) * Math.pow(10, 18);\n      let bAmount = parseFloat(tokenBAmount) * Math.pow(10, 18);\n      dispatch(loaderText(\"waiting for Token Approval......\"))\n\n      LiquidityRouter.methods\n        .approve(\n          router_address, //pancake's cntrct address\n          aAmount.toString() //approve amount\n        )\n        .send({ from: address })\n        .on(\"receipt\", (hash) => {\n\n          dispatch(loaderText(\"Adding Liquidity....\"))\n\n          pancakeRouter.methods\n            .addLiquidityETH(\n              tokenAAddress, //abc token addresss\n              bAmount.toString(), //equal to approve amount or lesser\n              0,\n              0,\n              address, //user address\n              deadline\n            )\n            .send({ from: address, value: bAmount.toString() }) //0.1 BNB\n            .on(\"receipt\", (hash) => {\n              apiCall();\n            })\n            .on(\"error\", (error) => {\n              dispatch(enableLoader(false))\n              toast.error(error);\n            });\n        })\n        .on(\"error\", (error) => {\n          dispatch(enableLoader(false))\n          toast.error(error);\n        });\n    } else {\n      let aAmount = parseFloat(tokenAAmount) * Math.pow(10, 18);\n      let bAmount = parseFloat(tokenBAmount) * Math.pow(10, 18);\n      dispatch(enableLoader(true))\n      dispatch(loaderText(\"Waiting for A Token Approval......\"))\n      await new Promise((reso, rej) => {\n        LiquidityRouter.methods\n          .approve(router_address, aAmount.toString())\n          .send({ from: address })\n          .on(\"receipt\", (hash) => {\n            reso(true);\n          })\n          .on(\"error\", (error) => {\n            dispatch(enableLoader(false))\n            toast.error(error);\n          });\n      });\n\n      dispatch(loaderText(\"Waiting for B Token Approval......\"))\n\n      await new Promise((reso, rej) => {\n        LiquidityRouterTwo.methods\n          .approve(router_address, bAmount.toString())\n          .send({ from: address })\n          .on(\"receipt\", (ftx) => {\n            reso(true);\n          })\n          .on(\"error\", (error) => {\n            dispatch(enableLoader(false))\n            toast.error(error);\n          });\n      });\n\n      dispatch(loaderText(\"Adding Liquidity....\"))\n\n\n      pancakeRouter.methods\n        .addLiquidity(\n          tokenAAddress, //token a\n          tokenBAddress, //token b\n          aAmount.toString(),\n          bAmount.toString(),\n          0,\n          0,\n          address,\n          deadline\n        )\n        .send({ from: address })\n        .on(\"receipt\", (hash) => {\n          apiCall();\n        })\n        .on(\"error\", (error) => {\n          toast.error(error);\n        });\n    }\n  };\n\n\n  var Contract_Liquidity = new web3.eth.Contract(LiquidityABI, liquidity_address)\n  var approve_fn1 = new web3.eth.Contract(ApproveABI, tokenAAddress);\n  var approve_fn2 = new web3.eth.Contract(ApproveABI, tokenBAddress);\n\n  var from_amount = tokenAAmount\n  var to_amount = tokenBAmount\n\n\n  const onSubmit = () => {\n    let a = web3.utils.isAddress(tokenAAddress);\n    let b = web3.utils.isAddress(tokenBAddress)\n\n    if (a && b) {\n      approve_fn1.methods.decimals().call()\n        .then((deci1) => {\n\n\n          approve_fn2.methods.decimals().call()\n            .then((deci2) => {\n              setActive(true);\n              setMessage(\"Loading...\")\n\n\n              to_amount = amountConvert(to_amount, deci1);\n              from_amount = amountConvert(from_amount, deci2);\n\n\n              approve_fn1.methods.approve(liquidity_address, from_amount)\n                .send({ from: address })\n                .on(\"receipt\", (hash) => {\n                  approve_fn2.methods.approve(liquidity_address, to_amount)\n                    .send({ from: address })\n                    .on(\"receipt\", (hash) => {\n                      Contract_Liquidity.methods.addLiquidity([tokenAAddress, tokenBAddress, address, from_amount, to_amount, 0, 0, deadline])\n                        .send({ from: address })\n                        .on(\"receipt\", (hash) => {\n                          apiCall()\n                        })\n                        .on(\"error\", (err) => {\n                          alert(\"Transaction Cancelled\")\n                          setActive(false);\n\n                        })\n                    })\n                    .on(\"error\", (err) => {\n                      alert(\"Transaction Cancelled\")\n                      setActive(false);\n\n                    })\n                })\n                .on(\"error\", (err) => {\n                  alert(\"Transaction Cancelled\")\n                  setActive(false);\n\n                })\n            })\n        })\n    }\n    else {\n      toast.error(\"Enter Valid Address\")\n    }\n\n  }\n\n  const amountConvert = (amount, decimal, type = \"towei\") => {\n    if (type == \"towei\") {\n      let coinwei = Math.pow(10, decimal);\n      let sendAmount = amount * coinwei;\n\n      return (sendAmount = getNumber(sendAmount));\n    } else if (type == \"fromwei\") {\n      let coinwei = Math.pow(10, decimal);\n      let sendAmount = amount / coinwei;\n      return (sendAmount = getNumber(sendAmount));\n    }\n  };\n\n  const getNumber = (x) => {\n    if (Math.abs(x) < 1.0) {\n      var e = parseInt(x.toString().split(\"e-\")[1]);\n      if (e) {\n        x *= Math.pow(10, e - 1);\n        x = \"0.\" + new Array(e).join(\"0\") + x.toString().substring(2);\n      }\n    }\n    else {\n      var e = parseInt(x.toString().split(\"+\")[1]);\n\n      if (e > 20) {\n        e -= 20;\n        x /= Math.pow(10, e);\n        x += new Array(e + 1).join(\"0\");\n      }\n    }\n    if (!Number.isInteger(x)) {\n      x = x.toString();\n    }\n\n    return x.toString();\n  };\n\n\n  return (\n    <div className=\"add-pairs-container\">\n      <LoadingOverlay\n        active={active}\n        spinner={<FadeLoader color={color} css={override} size={150} />}\n      // text=\"Please Connect Admin Address...\"\n      >\n        <form className=\"form-class\" onSubmit={handleSubmit(onSubmit)}>\n          <h5>Add Liquidity</h5>\n          <br></br>\n          <div className=\"row\">\n            <div className=\"col-3\">\n              {\" \"}\n              <label> Token A:</label>\n            </div>\n            <div className=\"col-9\">\n              <select\n                className=\"form-select\"\n                onChange={handleToken}\n                name=\"tokenone\"\n                ref={register({\n                  required: \"select one option\",\n                })}\n                value={selectedToken}\n              >\n                {listCurrencies &&\n                  listCurrencies.length > 0 &&\n                  listCurrencies.map((value, index) => {\n                    return (\n                      <>\n                        <option\n                          key={index}\n                          value={value.tokenName}\n                          selected={index == 0}\n                        >\n                          {value.tokenName}\n                        </option>\n                      </>\n                    );\n                  })}\n              </select>\n              {errors.tokenone && (\n                <div className=\"form-error\">{errors.tokenone.message}.</div>\n              )}\n            </div>\n          </div>\n          <br></br>\n\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <label> Token B:</label>\n            </div>\n            <div className=\"col-9\">\n              <select\n                className=\"form-select\"\n                name=\"oppositetoken\"\n                onChange={handleOppositeToken}\n                ref={register({\n                  required: \"select one option\",\n                })}\n              >\n                {listCurrenciesTwo &&\n                  listCurrenciesTwo.length > 0 &&\n                  listCurrenciesTwo.map((value, index) => {\n                    return (\n                      <>\n                        <option\n                          key={index}\n                          value={value.tokenName}\n                          selected={index == 0}\n                        >\n                          {value.tokenName}\n                        </option>\n                      </>\n                    );\n                  })}\n              </select>\n              {errors.oppositetoken && (\n                <div className=\"form-error\">\n                  {errors.oppositetoken.message}.\n                </div>\n              )}\n            </div>\n          </div>\n          <br></br>\n\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <label>Token A Address:</label>\n            </div>\n            <div className=\"col-9\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Token A Address\"\n                autoComplete=\"off\"\n                name=\"tokenaaddress\"\n                value={tokenAAddress}\n                readonly\n                // onChange={(event) => {let a = web3.utils.isAddress(event.target.value); a?setTokenAAddress(event.target.value): setTokenAAddress(\"\")}}\n                ref={register({\n                  required: \"Token A Address is required\",\n                  pattern: {\n                    value: /^[A-Za-z0-9]*$/,\n                    message: \"Only Characters\",\n                  },\n                })}\n              />\n              {errors.tokenaaddress && (\n                <div className=\"form-error\">\n                  {errors.tokenaaddress.message}.\n                </div>\n              )}\n            </div>\n          </div>\n          <br></br>\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <label>Token B Address:</label>\n            </div>\n            <div className=\"col-9\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Token B Address\"\n                autoComplete=\"off\"\n                name=\"tokenbaddress\"\n                value={tokenBAddress}\n                readonly\n\n                // onChange={(event) => {let a = web3.utils.isAddress(event.target.value);a?setTokenBAddress(event.target.value):setTokenBAddress(\"\")}}\n                ref={register({\n                  required: \"Token B Address is required\",\n                  pattern: {\n                    value: /^[A-Za-z0-9]*$/,\n                    message: \"Only Characters\",\n                  },\n                })}\n              />\n              {errors.tokenbaddress && (\n                <div className=\"form-error\">\n                  {errors.tokenbaddress.message}.\n                </div>\n              )}\n            </div>\n          </div>\n          <br></br>\n\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <label>Token A Amount:</label>\n            </div>\n            <div className=\"col-9\">\n              <input\n                type=\"text\"\n                placeholder=\"Enter Token A Amount\"\n                className=\"form-control\"\n                autoComplete=\"off\"\n                name=\"tokenaamount\"\n                onChange={(event) => setTokenAAmount(event.target.value)}\n                ref={register({\n                  required: \"Token A Amount is required\",\n                  pattern: {\n                    value: /[+-]?([0-9]*[.])?[0-9]+/,\n                    message: \"Only Numerics\",\n                  },\n                })}\n              />\n              {errors.tokenaamount && (\n                <div className=\"form-error\">{errors.tokenaamount.message}.</div>\n              )}\n            </div>\n          </div>\n          <br></br>\n\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <label>Token B Amount:</label>\n            </div>\n            <div className=\"col-9\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Enter Token B Amount\"\n                autoComplete=\"off\"\n                name=\"tokenbamount\"\n                onChange={(event) => setTokenBAmount(event.target.value)}\n                ref={register({\n                  required: \"Token B Amount is required\",\n                  pattern: {\n                    value: /[+-]?([0-9]*[.])?[0-9]+/,\n                    message: \"Only Numerics\",\n                  },\n                })}\n              />\n              {errors.tokenbamount && (\n                <div className=\"form-error\">{errors.tokenbamount.message}.</div>\n              )}\n            </div>\n\n\n          </div>\n          <br></br>\n          <br></br>\n          <div align=\"center\">\n            <button className=\"btn\" style={{ background: \"#13316f\", color: \"white\", border: \"2px solid #13316f\" }}>Submit</button>\n          </div>\n        </form>\n\n        <br></br>\n        <br></br>\n        <br></br>\n      </LoadingOverlay>\n    </div>\n  );\n};\n\nexport default AddPairs;\n","// export const admin_address = \"0xae6F33E0fc0e5EE264AeF585c8435aef40565148\"\n\nexport const admin_address = \"0x66CAD4cB71902b77615Cb44C6e1526341acf0155\"\n\nexport const collar_address = \"0x1182E2f7Be2AA3a6b2d8fF80421551F4562e1158\";\n\nexport const router_address = \"0xF0ab3426F5A5F90D919abDB47C7ed91aCF8117f0\"\n\nexport const liquidity_address = \"0x2508016a2c33dD8D12e902bE3711A04378A3F9e2\""],"sourceRoot":""}