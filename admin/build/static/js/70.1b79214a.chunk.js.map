{"version":3,"sources":["views/pages/ip blocklist/Blocklist.js"],"names":["apiURL","helper","blockURL","Blocklist","blockStatus","useSelector","state","userReducer","blocklist","history","useDispatch","useHistory","useState","blocklistData","setBlockListData","React","pending","setPending","data","columns","name","cell","row","index","selector","sortable","Date","createdAt","toLocaleString","className","onClick","clickHandler","_id","id","ID","useEffect","axios","get","then","res","result","catch","err","toast","error","ipPostData","postData","status","success","message","fil","filter","item","align","style","background","color","border","push","pagination","progressPending","highlightOnHover","fixedHeader","subHeaderAlign"],"mappings":"0TAYMA,EAASC,IAAOC,WA2GPC,UA1GG,WAEhB,IAAMC,EAAcC,aAClB,SAACC,GAAD,OAAWA,EAAMC,YAAYC,aAM3BC,GAHaC,cAGHC,eAId,EAA0CC,qBAA1C,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA8BC,IAAMH,UAAS,GAA7C,mBAAOI,EAAP,KAAgBC,EAAhB,KAEMC,EAAOL,EACPM,EAAU,CACd,CACEC,KAAM,OACNC,KAAM,SAACC,EAAKC,GAAN,OAAgBA,EAAQ,IAEhC,CACEH,KAAM,YACNI,SAAU,YACVC,UAAU,GAEZ,CACEL,KAAM,YACNI,SAAU,YACVC,UAAU,EACVJ,KAAM,SAACC,GAAD,OACJ,qBAAK,WAAS,iBAAd,SACG,IAAII,KAAKJ,EAAIK,WAAWC,qBAI/B,CACER,KAAM,SACNC,KAAM,SAACC,GAAD,OACJ,wBACEO,UAAU,yBACVC,QAAS,kBAAMC,EAAaT,EAAIU,MAChCC,GAAIX,EAAIY,GAHV,SAKE,cAAC,IAAD,SAKRC,qBAAU,WACRC,IACGC,IACD,mEAECC,MAAK,SAACC,GACLzB,EAAiByB,EAAIrB,KAAKsB,QAC1BvB,GAAW,MAEZwB,OAAM,SAACC,GAAD,OAASC,IAAMC,MAAMF,QAC7B,CAACtC,IAEJ,IAAM2B,EAAe,SAACE,GACpB,IAAIY,EAAa,CACfZ,GAAIA,GAENhC,IACG6C,SAAS9C,EAAS,YAAa6C,GAC/BP,MAAK,SAACC,GACL,GAAuB,KAAnBA,EAAIrB,KAAK6B,OAAe,CAC1BJ,IAAMK,QAAQT,EAAIrB,KAAK+B,SACvB,IAAIC,EAAMrC,EAAcsC,QAAQ,SAAAC,GAAI,OAAIA,EAAKpB,KAAOC,KACpDnB,EAAiBoC,QAEjBP,IAAMC,MAAML,EAAIrB,KAAK+B,YAGxBR,OAAM,SAACC,GACNC,IAAMC,MAAMF,OAGlB,OACE,gCACE,oDACA,qBAAKW,MAAM,QAAX,SACE,wBAAQxB,UAAU,MAAMyB,MAAO,CAAEC,WAAY,UAAWC,MAAO,QAASC,OAAQ,qBAAuB3B,QA3EnF,WACxBrB,EAAQiD,KAAK,6CA0ET,uBAIF,uBACA,gCACG,IACD,cAAC,IAAD,CACExC,KAAMA,EACNC,QAASA,EACTwC,YAAY,EACZC,gBAAiB5C,EACjB6C,kBAAkB,EAClBC,aAAa,EACbC,eAAe","file":"static/js/70.1b79214a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport DataTable, { createTheme } from \"react-data-table-component\";\nimport axios from \"axios\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { RiDeleteBinLine } from \"react-icons/ri\";\nimport helper from \"src/helpers/axiosHelper\";\nimport { toast } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { showBlockListData } from \"../../../Actions/Actions\"\n\nconst apiURL = helper.blockURL();\nconst Blocklist = () => {\n\n  const blockStatus = useSelector(\n    (state) => state.userReducer.blocklist\n  );\n\n  const dispatch = useDispatch();\n  const showBList = (data) => dispatch(showBlockListData(data));\n\n  let history = useHistory();\n  const addNewIpBlockList = () => {\n    history.push(\"/t76XKN5NjQOrEeQ1k1oIn6LF45Dy3V8nopXtPN8\");\n  };\n  const [blocklistData, setBlockListData] = useState();\n  const [pending, setPending] = React.useState(true);\n\n  const data = blocklistData;\n  const columns = [\n    {\n      name: \"S.No\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"IpAddress\",\n      selector: \"ipAddress\",\n      sortable: true,\n    },\n    {\n      name: \"CreatedAt\",\n      selector: \"createdAt\",\n      sortable: true,\n      cell: (row) => (\n        <div data-tag=\"allowRowEvents\">\n          {new Date(row.createdAt).toLocaleString()}\n        </div>\n      ),\n    },\n    {\n      name: \"Action\",\n      cell: (row) => (\n        <button\n          className=\"btn btn-primary btn-sm\"\n          onClick={() => clickHandler(row._id)}\n          id={row.ID}\n        >\n          <RiDeleteBinLine />\n        </button>\n      ),\n    },\n  ];\n  useEffect(() => {\n    axios\n      .get(\n      \"https://bakxlxiqwosd.pocketswap.org/api/blocklist/listblocklist\"\n      )\n      .then((res) => {\n        setBlockListData(res.data.result);\n        setPending(false);\n      })\n      .catch((err) => toast.error(err));\n  }, [blockStatus]);\n\n  const clickHandler = (id) => {\n    let ipPostData = {\n      id: id,\n    };\n    helper\n      .postData(apiURL + \"/deleteip\", ipPostData)\n      .then((res) => {\n        if (res.data.status == 200) {\n          toast.success(res.data.message);\n          var fil = blocklistData.filter((item => item._id != id))\n          setBlockListData(fil)\n        } else {\n          toast.error(res.data.message);\n        }\n      })\n      .catch((err) => {\n        toast.error(err);\n      });\n  };\n  return (\n    <div>\n      <h5> IP Blocklist Page</h5>\n      <div align=\"right\">\n        <button className=\"btn\" style={{ background: \"#13316f\", color: \"white\", border: \"2px solid #13316f\" }} onClick={addNewIpBlockList}>\n          Add New\n        </button>\n      </div>\n      <br></br>\n      <div>\n        {\" \"}\n        <DataTable\n          data={data}\n          columns={columns}\n          pagination={true}\n          progressPending={pending}\n          highlightOnHover={true}\n          fixedHeader={true}\n          subHeaderAlign=\"right\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Blocklist;\n"],"sourceRoot":""}