{"version":3,"sources":["views/pages/farming pairs/FarmingPairs.js"],"names":["apiURL","helper","stakeURL","FarmingPairs","useState","stakeList","setStakeList","React","pending","setPending","dispatch","useDispatch","statusoffarm","useSelector","state","userReducer","updatefarmstatus","data","columns","name","cell","row","index","width","selector","sortable","Date","createdAt","toLocaleString","history","useHistory","useEffect","getData","then","res","result","updatefarmdata","catch","err","toast","error","align","className","style","background","color","border","onClick","push","progressPending","pagination","highlightOnHover","fixedHeader","subHeaderAlign"],"mappings":"wSAWMA,EAASC,IAAOC,WAmIPC,UAjIM,WAEnB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BC,IAAMH,UAAS,GAA7C,mBAAOI,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,cAEXC,EAAeC,aACnB,SAACC,GAAD,OAAWA,EAAMC,YAAYC,oBAGzBC,EAAOZ,EACPa,EAAU,CACd,CACEC,KAAM,OACNC,KAAM,SAACC,EAAKC,GAAN,OAAgBA,EAAQ,GAC9BC,MAAO,SAET,CACEJ,KAAM,OACNK,SAAU,OACVC,UAAU,GAEZ,CACEN,KAAM,eACNK,SAAU,cACVC,UAAU,EACVF,MAAO,SAET,CACEJ,KAAM,UACNK,SAAU,SACVD,MAAO,SAIT,CACEJ,KAAM,UACNK,SAAU,MACVC,UAAU,EACVF,MAAO,SAGT,CACEJ,KAAM,mBACNK,SAAU,kBACVC,UAAU,EACVF,MAAO,SAGT,CACEJ,KAAM,YACNK,SAAU,YACVC,UAAU,EACVL,KAAM,SAACC,GAAD,OACJ,qBAAK,WAAS,iBAAd,SACG,IAAIK,KAAKL,EAAIM,WAAWC,sBAQ7BC,EAAUC,cACd,EAAoB1B,mBAAS,IAA7B,6BAyBA2B,qBAAU,WACR9B,IACG+B,QAAQhC,EAAS,kBACjBiC,MAAK,SAACC,GACL5B,EAAa4B,EAAIjB,KAAKkB,QACtBzB,EAAS0B,aAAe,IACxB3B,GAAW,MAEZ4B,OAAM,SAACC,GAAD,OAASC,IAAMC,MAAMF,QAC7B,CAAC1B,IAMJ,OACE,gCACE,mDACA,qBAAK6B,MAAM,QAAX,SACE,wBAAQC,UAAU,MAAMC,MAAO,CAAEC,WAAY,UAAWC,MAAO,QAASC,OAAQ,qBAAuBC,QARtF,WACrBlB,EAAQmB,KAAK,4BAOT,gCAIF,uBACA,gCACG,IACD,cAAC,IAAD,CACE/B,KAAMA,EACNC,QAASA,EACT+B,gBAAiBzC,EACjB0C,YAAY,EACZC,kBAAkB,EAClBC,aAAa,EACbC,eAAe","file":"static/js/63.183b6331.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useHistory } from \"react-router\";\nimport DataTable, { createTheme } from \"react-data-table-component\";\nimport axios from \"axios\";\nimport { FiEdit } from \"react-icons/fi\";\nimport helper from \"src/helpers/axiosHelper\";\nimport { toast } from \"react-toastify\";\nimport { updatefarmdata } from \"src/Actions/Actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst apiURL = helper.stakeURL();\n\nconst FarmingPairs = () => {\n\n  const [stakeList, setStakeList] = useState([]);\n  const [pending, setPending] = React.useState(true);\n  const dispatch = useDispatch();\n\n  const statusoffarm = useSelector(\n    (state) => state.userReducer.updatefarmstatus\n  );\n\n  const data = stakeList;\n  const columns = [\n    {\n      name: \"S.No\",\n      cell: (row, index) => index + 1,\n      width: \"100px\",\n    },\n    {\n      name: \"Pair\",\n      selector: \"pair\",\n      sortable: true,\n    },\n    {\n      name: \"Pair Address\",\n      selector: \"pairAddress\",\n      sortable: true,\n      width: \"550px\"\n    },\n    {\n      name: \"Pool ID\",\n      selector: \"pairId\",\n      width: \"170px\"\n\n    },\n\n    {\n      name: \"APR (%)\",\n      selector: \"APR\",\n      sortable: true,\n      width: \"170px\"\n\n    },\n    {\n      name: \"Allocation Point\",\n      selector: \"allocationPoint\",\n      sortable: true,\n      width: \"170px\"\n\n    },\n    {\n      name: \"CreatedAt\",\n      selector: \"createdAt\",\n      sortable: true,\n      cell: (row) => (\n        <div data-tag=\"allowRowEvents\">\n          {new Date(row.createdAt).toLocaleString()}\n        </div>\n      ),\n    },\n\n\n  ];\n\n  let history = useHistory();\n  const [ID, setId] = useState(\"\")\n  const clickHandler = (id) => {\n\n    setId(id)\n    let data = {\n      id: id,\n      stakeStatus: \"Closed\"\n    }\n    axios\n      .post(apiURL + \"/updatestake\", data)\n      .then(res => {\n        if (res.data.status == 200) {\n          toast.success(res.data.message)\n          dispatch(updatefarmdata(true));\n\n        }\n        else {\n          toast.error(res.data.message)\n          dispatch(updatefarmdata(false));\n\n        }\n      })\n      .catch(err => console.error(err));\n  };\n\n  useEffect(() => {\n    helper\n      .getData(apiURL + \"/liststakedata\")\n      .then((res) => {\n        setStakeList(res.data.result);\n        dispatch(updatefarmdata(true))\n        setPending(false);\n      })\n      .catch((err) => toast.error(err));\n  }, [statusoffarm]);\n\n  const AddFarmingPair = () => {\n    history.push(\"/x3SDEITBOsBhyh5KHd91Ew\");\n  };\n\n  return (\n    <div>\n      <h5>Farming Pair List</h5>\n      <div align=\"right\">\n        <button className=\"btn\" style={{ background: \"#13316f\", color: \"white\", border: \"2px solid #13316f\" }} onClick={AddFarmingPair}>\n          Add Farming Pair\n        </button>\n      </div>\n      <br></br>\n      <div>\n        {\" \"}\n        <DataTable\n          data={data}\n          columns={columns}\n          progressPending={pending}\n          pagination={true}\n          highlightOnHover={true}\n          fixedHeader={true}\n          subHeaderAlign=\"right\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FarmingPairs;\n"],"sourceRoot":""}