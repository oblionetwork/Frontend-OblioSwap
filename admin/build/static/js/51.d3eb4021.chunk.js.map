{"version":3,"sources":["views/pages/CMS/AddCMS.js"],"names":["addcms","helper","listCms","addCms","AddCMS","history","useHistory","useForm","mode","register","handleSubmit","errors","watch","reset","useState","title","setTitle","description","setDescription","makeStyles","palette","buttonProgress","position","top","left","marginTop","marginLeft","useStyles","className","border","Body","onSubmit","data","data1","postData","then","res","status","toast","success","message","push","error","autoComplete","Group","id","Label","Control","type","placeholder","name","defaultValue","onChange","event","target","value","ref","required","activeClass","config","toolbarGroups","groups","removeButtons","fontSize_sizes","font_names","allowedContent","content","events","change","evt","newContent","editor","getData"],"mappings":"gWAgBMA,GADUC,IAAOC,UACRD,IAAOE,UA2HPC,UAzHA,WAEb,IAAIC,EAAUC,cAEd,EAAyDC,YAAQ,CAAEC,KAAM,WAAjEC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,OAEhC,GAFA,EAAwCC,MAAxC,EAA+CC,MAErBC,mBAAS,KAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAGkBC,aAAW,cAAGC,QAAH,uBAA4B,CACvDC,eAAgB,CACdC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,WAAY,GACZC,YAAa,OAIDC,GA4DhB,OACE,sBAAKC,UAAU,sBAAf,UACE,yCACA,cAAC,IAAD,CAAMC,OAAO,QAAQD,UAAU,0BAA/B,SACE,eAAC,IAAKE,KAAN,WACE,oBAAIF,UAAU,OAAd,qBACA,eAAC,IAAD,CAAMA,UAAU,OAAOG,SAAUrB,GAhExB,SAAAsB,GACf,IAAIC,EACJ,CACE,QAAWlB,EACX,OAAUE,GAGZhB,IAAOiC,SAASlC,EAAQiC,GACrBE,MAAK,SAACC,GACa,GAAdA,EAAIC,QACNC,IAAMC,QAAQH,EAAII,SAClBnC,EAAQoC,KAAK,SAGbH,IAAMI,MAAMN,EAAII,eAkDyCG,aAAc,MAAvE,UAME,eAAC,IAAKC,MAAN,CAAYC,GAAG,UAAUjB,UAAU,OAAnC,UACE,cAAC,IAAKkB,MAAN,oBACA,cAAC,IAAKC,QAAN,CAAcC,KAAK,OAAOC,YAAY,QAAQC,KAAK,QAAQC,aAAclC,EACvEmC,SAAU,SAACC,GAAD,OAAWrC,EAASqC,EAAMC,OAAOC,QAAQC,IAAK/C,EAAS,CAAEgD,SAAU,eAC9E9C,EAAOI,OAAS,mBAAGa,UAAU,cAAb,SAA4BjB,EAAOI,MAAMyB,aAE5D,eAAC,IAAKI,MAAN,WACE,cAAC,IAAKE,MAAN,sBACA,cAAC,IAAD,CACEY,YAAY,MACZC,OAxDD,CACXC,cAAe,CACb,CAAEV,KAAM,WAAYW,OAAQ,CAAC,OAAQ,WAAY,aACjD,CACEX,KAAM,UACNW,OAAQ,CAAC,OAAQ,YAAa,eAAgB,YAEhD,CAAEX,KAAM,QAASW,OAAQ,CAAC,UAC1B,CAAEX,KAAM,cAAeW,OAAQ,CAAC,cAAe,YAC/C,CACEX,KAAM,YACNW,OAAQ,CAAC,OAAQ,SAAU,SAAU,QAAS,OAAQ,cAExD,IACA,CAAEX,KAAM,QAASW,OAAQ,CAAC,UAC1B,CAAEX,KAAM,SAAUW,OAAQ,CAAC,WAC3B,CAAEX,KAAM,SAAUW,OAAQ,CAAC,WAC3B,CAAEX,KAAM,SAAUW,OAAQ,CAAC,WAC3B,CAAEX,KAAM,QAASW,OAAQ,CAAC,UAC1B,IACA,CAAEX,KAAM,YAAaW,OAAQ,CAAC,YAAa,SAC3C,CAAEX,KAAM,SAAUW,OAAQ,CAAC,WAC3B,CAAEX,KAAM,QAASW,OAAQ,CAAC,WAE5BC,cACE,sSACFC,eAAgB,2BAChBC,WACE,2FAGFC,gBAAgB,GA0BJC,QAASjD,EACTkD,OAAQ,CACNC,OAhEC,SAACC,GAChB,IAAIC,EAAaD,EAAIE,OAAOC,UAC5BtD,EAAeoD,UAkEP,uBACA,cAAC,IAAK1B,MAAN,UACE,cAAC,IAAD,CAAQI,KAAK,SAASpB,UAAU,kBAAhC,mC","file":"static/js/51.d3eb4021.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { toast } from \"react-toastify\";\nimport helper from \"../../../helpers/axiosHelper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DatePicker from \"react-datepicker\";\nimport CKEditor from \"react-ckeditor-component\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useHistory } from \"react-router\";\nimport { useForm } from \"react-hook-form\";\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Col, Row, Card, Form, Button, ButtonGroup, Breadcrumb, Spinner, InputGroup, Dropdown } from '@themesberg/react-bootstrap';\n\n\nconst listCms = helper.listCms()\nconst addcms = helper.addCms()\n\nconst AddCMS = () => {\n\n  let history = useHistory();\n\n  const { register, handleSubmit, errors, watch, reset } = useForm({ mode: \"onBlur\", });\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n\n  const useStyles = makeStyles(({ palette, ...theme }) => ({\n    buttonProgress: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n  }))\n\n  const classes = useStyles()\n\n  const onSubmit = data => {\n    let data1 =\n    {\n      \"Heading\": title,\n      \"Detail\": description,\n    }\n\n    helper.postData(addcms, data1)\n      .then((res) => {\n        if (res.status == true) {\n          toast.success(res.message);\n          history.push(\"/cms\");\n        }\n        else {\n          toast.error(res.message);\n        }\n      })\n  }\n\n  const onChange = (evt) => {\n    var newContent = evt.editor.getData();\n    setDescription(newContent);\n  }\n\n  let config = {\n    toolbarGroups: [\n      { name: \"document\", groups: [\"mode\", \"document\", \"doctools\"] },\n      {\n        name: \"editing\",\n        groups: [\"find\", \"selection\", \"spellchecker\", \"editing\"]\n      },\n      { name: \"forms\", groups: [\"forms\"] },\n      { name: \"basicstyles\", groups: [\"basicstyles\", \"cleanup\"] },\n      {\n        name: \"paragraph\",\n        groups: [\"list\", \"indent\", \"blocks\", \"align\", \"bidi\", \"paragraph\"]\n      },\n      \"/\",\n      { name: \"links\", groups: [\"links\"] },\n      { name: \"insert\", groups: [\"insert\"] },\n      { name: \"styles\", groups: [\"styles\"] },\n      { name: \"colors\", groups: [\"colors\"] },\n      { name: \"tools\", groups: [\"tools\"] },\n      \"/\",\n      { name: \"clipboard\", groups: [\"clipboard\", \"undo\"] },\n      { name: \"others\", groups: [\"others\"] },\n      { name: \"about\", groups: [\"about\"] }\n    ],\n    removeButtons:\n      \"Save,NewPage,Preview,Print,Templates,Cut,Copy,Paste,PasteText,PasteFromWord,Find,SelectAll,Scayt,Replace,Form,Checkbox,Textarea,Select,Button,ImageButton,HiddenField,CreateDiv,BidiLtr,BidiRtl,Language,Flash,Smiley,SpecialChar,PageBreak,Iframe,Anchor,ShowBlocks,About,CopyFormatting,Undo,Redo\",\n    fontSize_sizes: \"16/16px;24/24px;48/48px;\",\n    font_names:\n      \"Arial/Arial, Helvetica, sans-serif;\" +\n      \"Times New Roman/Times New Roman, Times, serif;\" +\n      \"Verdana\",\n    allowedContent: true\n  };\n\n  return (\n    <div className=\"add-token-container\">\n      <h5>Add CMS</h5>\n      <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\n        <Card.Body>\n          <h5 className=\"mb-4\">ADD CMS</h5>\n          <Form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)} autoComplete={\"off\"}>\n            {/* <Form.Group id=\"name\" className=\"mb-4\">\n              <Form.Label>Heading</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Title\" name=\"heading\" defaultValue={title} ref={register({ required: \"required\" })} />\n              {errors.heading && <p className=\"text-danger\">{errors.heading.message}</p>}\n            </Form.Group> */}\n            <Form.Group id=\"subject\" className=\"mb-4\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"title\" name=\"title\" defaultValue={description}\n                onChange={(event) => setTitle(event.target.value)} ref={register({ required: \"required\" })} />\n              {errors.title && <p className=\"text-danger\">{errors.title.message}</p>}\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Content</Form.Label>\n              <CKEditor\n                activeClass=\"p10\"\n                config={config}\n                content={description}\n                events={{\n                  change: onChange\n                }}\n              />\n            </Form.Group>\n            <br />\n            <Form.Group>\n              <Button type=\"submit\" className=\"btn btn-primary\">Submit</Button>\n            </Form.Group>\n          </Form>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n\n};\n\nexport default AddCMS;\n"],"sourceRoot":""}