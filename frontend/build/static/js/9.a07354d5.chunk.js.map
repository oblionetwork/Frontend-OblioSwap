{"version":3,"sources":["../../../../src/js/utils/index.js","../node_modules/autobind-decorator/lib/index.js","../../../../src/js/input-range/label.jsx","../../../src/js/index.js","../../../../src/js/input-range/input-range.jsx","../../../../src/js/input-range/value-transformer.js","../../../../src/js/utils/captialize.js","../../../../src/js/utils/clamp.js","../../../../src/js/utils/distance-to.js","../../../../src/js/utils/is-defined.js","../../../../src/js/utils/is-number.js","../../../../src/js/utils/is-object.js","../../../../src/js/utils/length.js","../../../../src/js/input-range/default-class-names.js","../../../../src/js/input-range/range-prop-type.js","../../../../src/js/input-range/value-prop-type.js","../../../../src/js/input-range/slider.jsx","../../../../src/js/input-range/track.jsx","../../../../src/js/input-range/key-codes.js","../node_modules/reactstrap/es/UncontrolledCollapse.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js"],"names":["default","boundClass","target","keys","undefined","Reflect","ownKeys","prototype","Object","getOwnPropertyNames","getOwnPropertySymbols","concat","forEach","key","descriptor","getOwnPropertyDescriptor","value","defineProperty","boundMethod","fn","Error","definingProperty","configurable","get","this","hasOwnProperty","boundFn","bind","writable","exports","_len","arguments","length","args","Array","_key","apply","module","Label","props","labelValue","className","children","classNames","formatLabel","type","isRequired","valueTransformer","InputRange","allowSameValues","ariaLabelledby","ariaControls","disabled","draggableTrack","maxValue","minValue","name","onChangeStart","onChange","onChangeComplete","step","removeDocumentMouseUpListener","removeDocumentTouchEndListener","trackNode","position","values","positions","distanceTo","currentValues","isObject","isWithinRange","hasStepDifference","lastKeyMoved","updatePositions","min","max","transformedValues","updateValues","shouldUpdate","isMultiValue","updateValue","node","ownerDocument","addEventListener","removeEventListener","event","isSliderDragging","requestAnimationFrame","prevEvent","stepValue","prevPosition","prevValue","offset","decrementValue","incrementValue","updatePosition","getKeyByPosition","isDefined","startValue","handleInteractionStart","handleInteractionEnd","addDocumentMouseUpListener","addDocumentTouchEndListener","percentages","getKeys","map","percentage","onSliderDrag","onSliderKeyDown","captialize","componentClassName","ref","onKeyDown","onKeyUp","onMouseDown","onTouchStart","onTrackDrag","onTrackMouseDown","renderSliders","renderHiddenInputs","Component","getPercentageFromPosition","getValueFromPosition","clientRect","sizePerc","getValueFromProps","getPercentageFromValue","getPercentagesFromValues","getPositionFromValue","getPositionsFromValues","getPositionFromEvent","clientX","x","clamp","y","getStepValueFromValue","valuePerStep","Math","string","pointA","pointB","xDiff","yDiff","numA","numB","activeTrack","disabledInputRange","inputRange","labelContainer","maxLabel","minLabel","slider","sliderContainer","track","valueLabel","isNumber","propName","Slider","removeDocumentMouseMoveListener","removeDocumentTouchMoveListener","left","addDocumentMouseMoveListener","addDocumentTouchMoveListener","style","draggable","role","tabIndex","Track","width","trackDragEvent","handleMouseDown","activeTrackStyle","DOWN_ARROW","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","omitKeys","propTypes","defaultOpen","PropTypes","bool","toggler","toggleEvents","arrayOf","defaultProps","defaultToggleEvents","UncontrolledCollapse","_Component","_this","call","togglers","removeEventListeners","toggle","_assertThisInitialized","state","isOpen","_inheritsLoose","_proto","componentDidMount","findDOMElements","addMultipleEventListeners","componentWillUnmount","e","setState","_ref","preventDefault","render","React","createElement","Collapse","_extends","omit","_excluded","tag","tagPropType","inverse","color","body","outline","cssModule","object","innerRef","oneOfType","func","Card","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","CardBody"],"mappings":"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","file":"static/js/9.a07354d5.chunk.js","sourcesContent":["export { default as captialize } from './captialize';\nexport { default as clamp } from './clamp';\nexport { default as distanceTo } from './distance-to';\nexport { default as isDefined } from './is-defined';\nexport { default as isNumber } from './is-number';\nexport { default as isObject } from './is-object';\nexport { default as length } from './length';\n","/**\n * @copyright 2015, Andrey Popp <8mayday@gmail.com>\n *\n * The decorator may be used on classes or methods\n * ```\n * @autobind\n * class FullBound {}\n *\n * class PartBound {\n *   @autobind\n *   method () {}\n * }\n * ```\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = autobind;\n\nfunction autobind() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args.length === 1) {\n    return boundClass.apply(undefined, args);\n  } else {\n    return boundMethod.apply(undefined, args);\n  }\n}\n\n/**\n * Use boundMethod to bind all methods on the target.prototype\n */\nfunction boundClass(target) {\n  // (Using reflect to get all keys including symbols)\n  var keys = undefined;\n  // Use Reflect if exists\n  if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {\n    keys = Reflect.ownKeys(target.prototype);\n  } else {\n    keys = Object.getOwnPropertyNames(target.prototype);\n    // use symbols if support is provided\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      keys = keys.concat(Object.getOwnPropertySymbols(target.prototype));\n    }\n  }\n\n  keys.forEach(function (key) {\n    // Ignore special case target method\n    if (key === 'constructor') {\n      return;\n    }\n\n    var descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n\n    // Only methods need binding\n    if (typeof descriptor.value === 'function') {\n      Object.defineProperty(target.prototype, key, boundMethod(target, key, descriptor));\n    }\n  });\n  return target;\n}\n\n/**\n * Return a descriptor removing the value and returning a getter\n * The getter will return a .bind version of the function\n * and memoize the result against a symbol on the instance\n */\nfunction boundMethod(target, key, descriptor) {\n  var fn = descriptor.value;\n\n  if (typeof fn !== 'function') {\n    throw new Error('@autobind decorator can only be applied to methods not: ' + typeof fn);\n  }\n\n  // In IE11 calling Object.defineProperty has a side-effect of evaluating the\n  // getter for the property which is being replaced. This causes infinite\n  // recursion and an \"Out of stack space\" error.\n  var definingProperty = false;\n\n  return {\n    configurable: true,\n    get: function get() {\n      if (definingProperty || this === target.prototype || this.hasOwnProperty(key)) {\n        return fn;\n      }\n\n      var boundFn = fn.bind(this);\n      definingProperty = true;\n      Object.defineProperty(this, key, {\n        value: boundFn,\n        configurable: true,\n        writable: true\n      });\n      definingProperty = false;\n      return boundFn;\n    }\n  };\n}\nmodule.exports = exports['default'];\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * @ignore\n * @param {Object} props\n * @param {InputRangeClassNames} props.classNames\n * @param {Function} props.formatLabel\n * @param {string} props.type\n */\nexport default function Label(props) {\n  const labelValue = props.formatLabel ? props.formatLabel(props.children, props.type) : props.children;\n\n  return (\n    <span className={props.classNames[`${props.type}Label`]}>\n      <span className={props.classNames.labelContainer}>\n        {labelValue}\n      </span>\n    </span>\n  );\n}\n\n/**\n * @type {Object}\n * @property {Function} children\n * @property {Function} classNames\n * @property {Function} formatLabel\n * @property {Function} type\n */\nLabel.propTypes = {\n  children: PropTypes.node.isRequired,\n  classNames: PropTypes.objectOf(PropTypes.string).isRequired,\n  formatLabel: PropTypes.func,\n  type: PropTypes.string.isRequired,\n};\n","import InputRange from './input-range/input-range';\n\n/**\n * @ignore\n * @typedef {Object} ClientRect\n * @property {number} height\n * @property {number} left\n * @property {number} top\n * @property {number} width\n */\n\n/**\n * @typedef {Object} InputRangeClassNames\n * @property {string} activeTrack\n * @property {string} disabledInputRange\n * @property {string} inputRange\n * @property {string} labelContainer\n * @property {string} maxLabel\n * @property {string} minLabel\n * @property {string} slider\n * @property {string} sliderContainer\n * @property {string} track\n * @property {string} valueLabel\n */\n\n/**\n * @typedef {Function} LabelFormatter\n * @param {number} value\n * @param {string} type\n * @return {string}\n */\n\n/**\n * @ignore\n * @typedef {Object} Point\n * @property {number} x\n * @property {number} y\n */\n\n/**\n * @typedef {Object} Range\n * @property {number} min - Min value\n * @property {number} max - Max value\n */\n\nexport default InputRange;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'autobind-decorator';\nimport * as valueTransformer from './value-transformer';\nimport DEFAULT_CLASS_NAMES from './default-class-names';\nimport Label from './label';\nimport rangePropType from './range-prop-type';\nimport valuePropType from './value-prop-type';\nimport Slider from './slider';\nimport Track from './track';\nimport { captialize, distanceTo, isDefined, isObject, length } from '../utils';\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from './key-codes';\n\n/**\n * A React component that allows users to input numeric values within a range\n * by dragging its sliders.\n */\nexport default class InputRange extends React.Component {\n  /**\n   * @ignore\n   * @override\n   * @return {Object}\n   */\n  static get propTypes() {\n    return {\n      allowSameValues: PropTypes.bool,\n      ariaLabelledby: PropTypes.string,\n      ariaControls: PropTypes.string,\n      classNames: PropTypes.objectOf(PropTypes.string),\n      disabled: PropTypes.bool,\n      draggableTrack: PropTypes.bool,\n      formatLabel: PropTypes.func,\n      maxValue: rangePropType,\n      minValue: rangePropType,\n      name: PropTypes.string,\n      onChangeStart: PropTypes.func,\n      onChange: PropTypes.func.isRequired,\n      onChangeComplete: PropTypes.func,\n      step: PropTypes.number,\n      value: valuePropType,\n    };\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @return {Object}\n   */\n  static get defaultProps() {\n    return {\n      allowSameValues: false,\n      classNames: DEFAULT_CLASS_NAMES,\n      disabled: false,\n      maxValue: 10,\n      minValue: 0,\n      step: 1,\n    };\n  }\n\n  /**\n   * @param {Object} props\n   * @param {boolean} [props.allowSameValues]\n   * @param {string} [props.ariaLabelledby]\n   * @param {string} [props.ariaControls]\n   * @param {InputRangeClassNames} [props.classNames]\n   * @param {boolean} [props.disabled = false]\n   * @param {Function} [props.formatLabel]\n   * @param {number|Range} [props.maxValue = 10]\n   * @param {number|Range} [props.minValue = 0]\n   * @param {string} [props.name]\n   * @param {string} props.onChange\n   * @param {Function} [props.onChangeComplete]\n   * @param {Function} [props.onChangeStart]\n   * @param {number} [props.step = 1]\n   * @param {number|Range} props.value\n   */\n  constructor(props) {\n    super(props);\n\n    /**\n     * @private\n     * @type {?number}\n     */\n    this.startValue = null;\n\n    /**\n     * @private\n     * @type {?Component}\n     */\n    this.node = null;\n\n    /**\n     * @private\n     * @type {?Component}\n     */\n    this.trackNode = null;\n\n    /**\n     * @private\n     * @type {bool}\n     */\n    this.isSliderDragging = false;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.lastKeyMoved = null;\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @return {void}\n   */\n  componentWillUnmount() {\n    this.removeDocumentMouseUpListener();\n    this.removeDocumentTouchEndListener();\n  }\n\n  /**\n   * Return the CSS class name of the component\n   * @private\n   * @return {string}\n   */\n  getComponentClassName() {\n    if (!this.props.disabled) {\n      return this.props.classNames.inputRange;\n    }\n\n    return this.props.classNames.disabledInputRange;\n  }\n\n  /**\n   * Return the bounding rect of the track\n   * @private\n   * @return {ClientRect}\n   */\n  getTrackClientRect() {\n    return this.trackNode.getClientRect();\n  }\n\n  /**\n   * Return the slider key closest to a point\n   * @private\n   * @param {Point} position\n   * @return {string}\n   */\n  getKeyByPosition(position) {\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n    const positions = valueTransformer.getPositionsFromValues(values, this.props.minValue, this.props.maxValue, this.getTrackClientRect());\n\n    if (this.isMultiValue()) {\n      const distanceToMin = distanceTo(position, positions.min);\n      const distanceToMax = distanceTo(position, positions.max);\n\n      if (distanceToMin < distanceToMax) {\n        return 'min';\n      }\n    }\n\n    return 'max';\n  }\n\n  /**\n   * Return all the slider keys\n   * @private\n   * @return {string[]}\n   */\n  getKeys() {\n    if (this.isMultiValue()) {\n      return ['min', 'max'];\n    }\n\n    return ['max'];\n  }\n\n  /**\n   * Return true if the difference between the new and the current value is\n   * greater or equal to the step amount of the component\n   * @private\n   * @param {Range} values\n   * @return {boolean}\n   */\n  hasStepDifference(values) {\n    const currentValues = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n\n    return length(values.min, currentValues.min) >= this.props.step ||\n           length(values.max, currentValues.max) >= this.props.step;\n  }\n\n  /**\n   * Return true if the component accepts a min and max value\n   * @private\n   * @return {boolean}\n   */\n  isMultiValue() {\n    return isObject(this.props.value);\n  }\n\n  /**\n   * Return true if the range is within the max and min value of the component\n   * @private\n   * @param {Range} values\n   * @return {boolean}\n   */\n  isWithinRange(values) {\n    if (this.isMultiValue()) {\n      return values.min >= this.props.minValue &&\n             values.max <= this.props.maxValue &&\n             this.props.allowSameValues\n              ? values.min <= values.max\n              : values.min < values.max;\n    }\n\n    return values.max >= this.props.minValue && values.max <= this.props.maxValue;\n  }\n\n  /**\n   * Return true if the new value should trigger a render\n   * @private\n   * @param {Range} values\n   * @return {boolean}\n   */\n  shouldUpdate(values) {\n    return this.isWithinRange(values) && this.hasStepDifference(values);\n  }\n\n  /**\n   * Update the position of a slider\n   * @private\n   * @param {string} key\n   * @param {Point} position\n   * @return {void}\n   */\n  updatePosition(key, position) {\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n    const positions = valueTransformer.getPositionsFromValues(values, this.props.minValue, this.props.maxValue, this.getTrackClientRect());\n\n    positions[key] = position;\n    this.lastKeyMoved = key;\n\n    this.updatePositions(positions);\n  }\n\n  /**\n   * Update the positions of multiple sliders\n   * @private\n   * @param {Object} positions\n   * @param {Point} positions.min\n   * @param {Point} positions.max\n   * @return {void}\n   */\n  updatePositions(positions) {\n    const values = {\n      min: valueTransformer.getValueFromPosition(positions.min, this.props.minValue, this.props.maxValue, this.getTrackClientRect()),\n      max: valueTransformer.getValueFromPosition(positions.max, this.props.minValue, this.props.maxValue, this.getTrackClientRect()),\n    };\n\n    const transformedValues = {\n      min: valueTransformer.getStepValueFromValue(values.min, this.props.step),\n      max: valueTransformer.getStepValueFromValue(values.max, this.props.step),\n    };\n\n    this.updateValues(transformedValues);\n  }\n\n  /**\n   * Update the value of a slider\n   * @private\n   * @param {string} key\n   * @param {number} value\n   * @return {void}\n   */\n  updateValue(key, value) {\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n\n    values[key] = value;\n\n    this.updateValues(values);\n  }\n\n  /**\n   * Update the values of multiple sliders\n   * @private\n   * @param {Range|number} values\n   * @return {void}\n   */\n  updateValues(values) {\n    if (!this.shouldUpdate(values)) {\n      return;\n    }\n\n    this.props.onChange(this.isMultiValue() ? values : values.max);\n  }\n\n  /**\n   * Increment the value of a slider by key name\n   * @private\n   * @param {string} key\n   * @return {void}\n   */\n  incrementValue(key) {\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n    const value = values[key] + this.props.step;\n\n    this.updateValue(key, value);\n  }\n\n  /**\n   * Decrement the value of a slider by key name\n   * @private\n   * @param {string} key\n   * @return {void}\n   */\n  decrementValue(key) {\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n    const value = values[key] - this.props.step;\n\n    this.updateValue(key, value);\n  }\n\n  /**\n   * Listen to mouseup event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseUpListener() {\n    this.removeDocumentMouseUpListener();\n    this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * Listen to touchend event\n   * @private\n   * @return {void}\n   */\n  addDocumentTouchEndListener() {\n    this.removeDocumentTouchEndListener();\n    this.node.ownerDocument.addEventListener('touchend', this.handleTouchEnd);\n  }\n\n  /**\n   * Stop listening to mouseup event\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseUpListener() {\n    this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * Stop listening to touchend event\n   * @private\n   * @return {void}\n   */\n  removeDocumentTouchEndListener() {\n    this.node.ownerDocument.removeEventListener('touchend', this.handleTouchEnd);\n  }\n\n  /**\n   * Handle any \"mousemove\" event received by the slider\n   * @private\n   * @param {SyntheticEvent} event\n   * @param {string} key\n   * @return {void}\n   */\n  @autobind\n  handleSliderDrag(event, key) {\n    if (this.props.disabled) {\n      return;\n    }\n\n    const position = valueTransformer.getPositionFromEvent(event, this.getTrackClientRect());\n    this.isSliderDragging = true;\n    requestAnimationFrame(() => this.updatePosition(key, position));\n  }\n\n  /**\n   * Handle any \"mousemove\" event received by the track\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleTrackDrag(event, prevEvent) {\n    if (this.props.disabled || !this.props.draggableTrack || this.isSliderDragging) {\n      return;\n    }\n\n    const {\n      maxValue,\n      minValue,\n      value: { max, min },\n    } = this.props;\n\n    const position = valueTransformer.getPositionFromEvent(event, this.getTrackClientRect());\n    const value = valueTransformer.getValueFromPosition(position, minValue, maxValue, this.getTrackClientRect());\n    const stepValue = valueTransformer.getStepValueFromValue(value, this.props.step);\n\n    const prevPosition = valueTransformer.getPositionFromEvent(prevEvent, this.getTrackClientRect());\n    const prevValue = valueTransformer.getValueFromPosition(prevPosition, minValue, maxValue, this.getTrackClientRect());\n    const prevStepValue = valueTransformer.getStepValueFromValue(prevValue, this.props.step);\n\n    const offset = prevStepValue - stepValue;\n\n    const transformedValues = {\n      min: min - offset,\n      max: max - offset,\n    };\n\n    this.updateValues(transformedValues);\n  }\n\n  /**\n   * Handle any \"keydown\" event received by the slider\n   * @private\n   * @param {SyntheticEvent} event\n   * @param {string} key\n   * @return {void}\n   */\n  @autobind\n  handleSliderKeyDown(event, key) {\n    if (this.props.disabled) {\n      return;\n    }\n\n    switch (event.keyCode) {\n    case LEFT_ARROW:\n    case DOWN_ARROW:\n      event.preventDefault();\n      this.decrementValue(key);\n      break;\n\n    case RIGHT_ARROW:\n    case UP_ARROW:\n      event.preventDefault();\n      this.incrementValue(key);\n      break;\n\n    default:\n      break;\n    }\n  }\n\n  /**\n   * Handle any \"mousedown\" event received by the track\n   * @private\n   * @param {SyntheticEvent} event\n   * @param {Point} position\n   * @return {void}\n   */\n  @autobind\n  handleTrackMouseDown(event, position) {\n    if (this.props.disabled) {\n      return;\n    }\n\n    const {\n      maxValue,\n      minValue,\n      value: { max, min },\n    } = this.props;\n\n    event.preventDefault();\n\n    const value = valueTransformer.getValueFromPosition(position, minValue, maxValue, this.getTrackClientRect());\n    const stepValue = valueTransformer.getStepValueFromValue(value, this.props.step);\n\n    if (!this.props.draggableTrack || stepValue > max || stepValue < min) {\n      this.updatePosition(this.getKeyByPosition(position), position);\n    }\n  }\n\n  /**\n   * Handle the start of any mouse/touch event\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleInteractionStart() {\n    if (this.props.onChangeStart) {\n      this.props.onChangeStart(this.props.value);\n    }\n\n    if (this.props.onChangeComplete && !isDefined(this.startValue)) {\n      this.startValue = this.props.value;\n    }\n  }\n\n  /**\n   * Handle the end of any mouse/touch event\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleInteractionEnd() {\n    if (this.isSliderDragging) {\n      this.isSliderDragging = false;\n    }\n\n    if (!this.props.onChangeComplete || !isDefined(this.startValue)) {\n      return;\n    }\n\n    if (this.startValue !== this.props.value) {\n      this.props.onChangeComplete(this.props.value);\n    }\n\n    this.startValue = null;\n  }\n\n  /**\n   * Handle any \"keydown\" event received by the component\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleKeyDown(event) {\n    this.handleInteractionStart(event);\n  }\n\n  /**\n   * Handle any \"keyup\" event received by the component\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleKeyUp(event) {\n    this.handleInteractionEnd(event);\n  }\n\n  /**\n   * Handle any \"mousedown\" event received by the component\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleMouseDown(event) {\n    this.handleInteractionStart(event);\n    this.addDocumentMouseUpListener();\n  }\n\n  /**\n   * Handle any \"mouseup\" event received by the component\n   * @private\n   * @param {SyntheticEvent} event\n   */\n  @autobind\n  handleMouseUp(event) {\n    this.handleInteractionEnd(event);\n    this.removeDocumentMouseUpListener();\n  }\n\n  /**\n   * Handle any \"touchstart\" event received by the component\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleTouchStart(event) {\n    this.handleInteractionStart(event);\n    this.addDocumentTouchEndListener();\n  }\n\n  /**\n   * Handle any \"touchend\" event received by the component\n   * @private\n   * @param {SyntheticEvent} event\n   */\n  @autobind\n  handleTouchEnd(event) {\n    this.handleInteractionEnd(event);\n    this.removeDocumentTouchEndListener();\n  }\n\n  /**\n   * Return JSX of sliders\n   * @private\n   * @return {JSX.Element}\n   */\n  renderSliders() {\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n    const percentages = valueTransformer.getPercentagesFromValues(values, this.props.minValue, this.props.maxValue);\n    const keys = this.props.allowSameValues &&\n      this.lastKeyMoved === 'min'\n      ? this.getKeys().reverse()\n      : this.getKeys();\n\n    return keys.map((key) => {\n      const value = values[key];\n      const percentage = percentages[key];\n\n      let { maxValue, minValue } = this.props;\n\n      if (key === 'min') {\n        maxValue = values.max;\n      } else {\n        minValue = values.min;\n      }\n\n      const slider = (\n        <Slider\n          ariaLabelledby={this.props.ariaLabelledby}\n          ariaControls={this.props.ariaControls}\n          classNames={this.props.classNames}\n          formatLabel={this.props.formatLabel}\n          key={key}\n          maxValue={maxValue}\n          minValue={minValue}\n          onSliderDrag={this.handleSliderDrag}\n          onSliderKeyDown={this.handleSliderKeyDown}\n          percentage={percentage}\n          type={key}\n          value={value} />\n      );\n\n      return slider;\n    });\n  }\n\n  /**\n   * Return JSX of hidden inputs\n   * @private\n   * @return {JSX.Element}\n   */\n  renderHiddenInputs() {\n    if (!this.props.name) {\n      return [];\n    }\n\n    const isMultiValue = this.isMultiValue();\n    const values = valueTransformer.getValueFromProps(this.props, isMultiValue);\n\n    return this.getKeys().map((key) => {\n      const value = values[key];\n      const name = isMultiValue ? `${this.props.name}${captialize(key)}` : this.props.name;\n\n      return (\n        <input key={key} type=\"hidden\" name={name} value={value} />\n      );\n    });\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @return {JSX.Element}\n   */\n  render() {\n    const componentClassName = this.getComponentClassName();\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n    const percentages = valueTransformer.getPercentagesFromValues(values, this.props.minValue, this.props.maxValue);\n\n    return (\n      <div\n        aria-disabled={this.props.disabled}\n        ref={(node) => { this.node = node; }}\n        className={componentClassName}\n        onKeyDown={this.handleKeyDown}\n        onKeyUp={this.handleKeyUp}\n        onMouseDown={this.handleMouseDown}\n        onTouchStart={this.handleTouchStart}>\n        <Label\n          classNames={this.props.classNames}\n          formatLabel={this.props.formatLabel}\n          type=\"min\">\n          {this.props.minValue}\n        </Label>\n\n        <Track\n          classNames={this.props.classNames}\n          draggableTrack={this.props.draggableTrack}\n          ref={(trackNode) => { this.trackNode = trackNode; }}\n          percentages={percentages}\n          onTrackDrag={this.handleTrackDrag}\n          onTrackMouseDown={this.handleTrackMouseDown}>\n\n          {this.renderSliders()}\n        </Track>\n\n        <Label\n          classNames={this.props.classNames}\n          formatLabel={this.props.formatLabel}\n          type=\"max\">\n          {this.props.maxValue}\n        </Label>\n\n        {this.renderHiddenInputs()}\n      </div>\n    );\n  }\n}\n","import { clamp } from '../utils';\n\n/**\n * Convert a point into a percentage value\n * @ignore\n * @param {Point} position\n * @param {ClientRect} clientRect\n * @return {number} Percentage value\n */\nexport function getPercentageFromPosition(position, clientRect) {\n  const length = clientRect.width;\n  const sizePerc = position.x / length;\n\n  return sizePerc || 0;\n}\n\n/**\n * Convert a point into a model value\n * @ignore\n * @param {Point} position\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {number}\n */\nexport function getValueFromPosition(position, minValue, maxValue, clientRect) {\n  const sizePerc = getPercentageFromPosition(position, clientRect);\n  const valueDiff = maxValue - minValue;\n\n  return minValue + (valueDiff * sizePerc);\n}\n\n/**\n * Convert props into a range value\n * @ignore\n * @param {Object} props\n * @param {boolean} isMultiValue\n * @return {Range}\n */\nexport function getValueFromProps(props, isMultiValue) {\n  if (isMultiValue) {\n    return { ...props.value };\n  }\n\n  return {\n    min: props.minValue,\n    max: props.value,\n  };\n}\n\n/**\n * Convert a model value into a percentage value\n * @ignore\n * @param {number} value\n * @param {number} minValue\n * @param {number} maxValue\n * @return {number}\n */\nexport function getPercentageFromValue(value, minValue, maxValue) {\n  const validValue = clamp(value, minValue, maxValue);\n  const valueDiff = maxValue - minValue;\n  const valuePerc = (validValue - minValue) / valueDiff;\n\n  return valuePerc || 0;\n}\n\n/**\n * Convert model values into percentage values\n * @ignore\n * @param {Range} values\n * @param {number} minValue\n * @param {number} maxValue\n * @return {Range}\n */\nexport function getPercentagesFromValues(values, minValue, maxValue) {\n  return {\n    min: getPercentageFromValue(values.min, minValue, maxValue),\n    max: getPercentageFromValue(values.max, minValue, maxValue),\n  };\n}\n\n/**\n * Convert a value into a point\n * @ignore\n * @param {number} value\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {Point} Position\n */\nexport function getPositionFromValue(value, minValue, maxValue, clientRect) {\n  const length = clientRect.width;\n  const valuePerc = getPercentageFromValue(value, minValue, maxValue);\n  const positionValue = valuePerc * length;\n\n  return {\n    x: positionValue,\n    y: 0,\n  };\n}\n\n/**\n * Convert a range of values into points\n * @ignore\n * @param {Range} values\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {Range}\n */\nexport function getPositionsFromValues(values, minValue, maxValue, clientRect) {\n  return {\n    min: getPositionFromValue(values.min, minValue, maxValue, clientRect),\n    max: getPositionFromValue(values.max, minValue, maxValue, clientRect),\n  };\n}\n\n/**\n * Convert an event into a point\n * @ignore\n * @param {Event} event\n * @param {ClientRect} clientRect\n * @return {Point}\n */\nexport function getPositionFromEvent(event, clientRect) {\n  const length = clientRect.width;\n  const { clientX } = event.touches ? event.touches[0] : event;\n\n  return {\n    x: clamp(clientX - clientRect.left, 0, length),\n    y: 0,\n  };\n}\n\n/**\n * Convert a value into a step value\n * @ignore\n * @param {number} value\n * @param {number} valuePerStep\n * @return {number}\n */\nexport function getStepValueFromValue(value, valuePerStep) {\n  return Math.round(value / valuePerStep) * valuePerStep;\n}\n","/**\n * Captialize a string\n * @ignore\n * @param {string} string\n * @return {string}\n */\nexport default function captialize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","/**\n * Clamp a value between a min and max value\n * @ignore\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nexport default function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n","/**\n * Calculate the distance between pointA and pointB\n * @ignore\n * @param {Point} pointA\n * @param {Point} pointB\n * @return {number} Distance\n */\nexport default function distanceTo(pointA, pointB) {\n  const xDiff = (pointB.x - pointA.x) ** 2;\n  const yDiff = (pointB.y - pointA.y) ** 2;\n\n  return Math.sqrt(xDiff + yDiff);\n}\n","/**\n * Check if a value is defined\n * @ignore\n * @param {*} value\n * @return {boolean}\n */\nexport default function isDefined(value) {\n  return value !== undefined && value !== null;\n}\n","/**\n * Check if a value is a number\n * @ignore\n * @param {*} value\n * @return {boolean}\n */\nexport default function isNumber(value) {\n  return typeof value === 'number';\n}\n","/**\n * Check if a value is an object\n * @ignore\n * @param {*} value\n * @return {boolean}\n */\nexport default function isObject(value) {\n  return value !== null && typeof value === 'object';\n}\n","/**\n * Calculate the absolute difference between two numbers\n * @ignore\n * @param {number} numA\n * @param {number} numB\n * @return {number}\n */\nexport default function length(numA, numB) {\n  return Math.abs(numA - numB);\n}\n","/**\n * Default CSS class names\n * @ignore\n * @type {InputRangeClassNames}\n */\nconst DEFAULT_CLASS_NAMES = {\n  activeTrack: 'input-range__track input-range__track--active',\n  disabledInputRange: 'input-range input-range--disabled',\n  inputRange: 'input-range',\n  labelContainer: 'input-range__label-container',\n  maxLabel: 'input-range__label input-range__label--max',\n  minLabel: 'input-range__label input-range__label--min',\n  slider: 'input-range__slider',\n  sliderContainer: 'input-range__slider-container',\n  track: 'input-range__track input-range__track--background',\n  valueLabel: 'input-range__label input-range__label--value',\n};\n\nexport default DEFAULT_CLASS_NAMES;\n","import { isNumber } from '../utils';\n\n/**\n * @ignore\n * @param {Object} props - React component props\n * @return {?Error} Return Error if validation fails\n */\nexport default function rangePropType(props) {\n  const { maxValue, minValue } = props;\n\n  if (!isNumber(minValue) || !isNumber(maxValue)) {\n    return new Error('\"minValue\" and \"maxValue\" must be a number');\n  }\n\n  if (minValue >= maxValue) {\n    return new Error('\"minValue\" must be smaller than \"maxValue\"');\n  }\n}\n","import { isNumber, isObject } from '../utils';\n\n/**\n * @ignore\n * @param {Object} props\n * @return {?Error} Return Error if validation fails\n */\nexport default function valuePropType(props, propName) {\n  const { maxValue, minValue } = props;\n  const value = props[propName];\n\n  if (!isNumber(value) && (!isObject(value) || !isNumber(value.min) || !isNumber(value.max))) {\n    return new Error(`\"${propName}\" must be a number or a range object`);\n  }\n\n  if (isNumber(value) && (value < minValue || value > maxValue)) {\n    return new Error(`\"${propName}\" must be in between \"minValue\" and \"maxValue\"`);\n  }\n\n  if (isObject(value) && (value.min < minValue || value.min > maxValue || value.max < minValue || value.max > maxValue)) {\n    return new Error(`\"${propName}\" must be in between \"minValue\" and \"maxValue\"`);\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'autobind-decorator';\nimport Label from './label';\n\n/**\n * @ignore\n */\nexport default class Slider extends React.Component {\n  /**\n   * Accepted propTypes of Slider\n   * @override\n   * @return {Object}\n   * @property {Function} ariaLabelledby\n   * @property {Function} ariaControls\n   * @property {Function} className\n   * @property {Function} formatLabel\n   * @property {Function} maxValue\n   * @property {Function} minValue\n   * @property {Function} onSliderDrag\n   * @property {Function} onSliderKeyDown\n   * @property {Function} percentage\n   * @property {Function} type\n   * @property {Function} value\n   */\n  static get propTypes() {\n    return {\n      ariaLabelledby: PropTypes.string,\n      ariaControls: PropTypes.string,\n      classNames: PropTypes.objectOf(PropTypes.string).isRequired,\n      formatLabel: PropTypes.func,\n      maxValue: PropTypes.number,\n      minValue: PropTypes.number,\n      onSliderDrag: PropTypes.func.isRequired,\n      onSliderKeyDown: PropTypes.func.isRequired,\n      percentage: PropTypes.number.isRequired,\n      type: PropTypes.string.isRequired,\n      value: PropTypes.number.isRequired,\n    };\n  }\n\n  /**\n   * @param {Object} props\n   * @param {string} [props.ariaLabelledby]\n   * @param {string} [props.ariaControls]\n   * @param {InputRangeClassNames} props.classNames\n   * @param {Function} [props.formatLabel]\n   * @param {number} [props.maxValue]\n   * @param {number} [props.minValue]\n   * @param {Function} props.onSliderKeyDown\n   * @param {Function} props.onSliderDrag\n   * @param {number} props.percentage\n   * @param {number} props.type\n   * @param {number} props.value\n   */\n  constructor(props) {\n    super(props);\n\n    /**\n     * @private\n     * @type {?Component}\n     */\n    this.node = null;\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @return {void}\n   */\n  componentWillUnmount() {\n    this.removeDocumentMouseMoveListener();\n    this.removeDocumentMouseUpListener();\n    this.removeDocumentTouchEndListener();\n    this.removeDocumentTouchMoveListener();\n  }\n\n  /**\n   * @private\n   * @return {Object}\n   */\n  getStyle() {\n    const perc = (this.props.percentage || 0) * 100;\n    const style = {\n      position: 'absolute',\n      left: `${perc}%`,\n    };\n\n    return style;\n  }\n\n  /**\n   * Listen to mousemove event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseMoveListener() {\n    this.removeDocumentMouseMoveListener();\n    this.node.ownerDocument.addEventListener('mousemove', this.handleMouseMove);\n  }\n\n  /**\n   * Listen to mouseup event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseUpListener() {\n    this.removeDocumentMouseUpListener();\n    this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * Listen to touchmove event\n   * @private\n   * @return {void}\n   */\n  addDocumentTouchMoveListener() {\n    this.removeDocumentTouchMoveListener();\n    this.node.ownerDocument.addEventListener('touchmove', this.handleTouchMove);\n  }\n\n  /**\n   * Listen to touchend event\n   * @private\n   * @return {void}\n   */\n  addDocumentTouchEndListener() {\n    this.removeDocumentTouchEndListener();\n    this.node.ownerDocument.addEventListener('touchend', this.handleTouchEnd);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseMoveListener() {\n    this.node.ownerDocument.removeEventListener('mousemove', this.handleMouseMove);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseUpListener() {\n    this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentTouchMoveListener() {\n    this.node.ownerDocument.removeEventListener('touchmove', this.handleTouchMove);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentTouchEndListener() {\n    this.node.ownerDocument.removeEventListener('touchend', this.handleTouchEnd);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleMouseDown() {\n    this.addDocumentMouseMoveListener();\n    this.addDocumentMouseUpListener();\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleMouseUp() {\n    this.removeDocumentMouseMoveListener();\n    this.removeDocumentMouseUpListener();\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleMouseMove(event) {\n    this.props.onSliderDrag(event, this.props.type);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleTouchStart() {\n    this.addDocumentTouchEndListener();\n    this.addDocumentTouchMoveListener();\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleTouchMove(event) {\n    this.props.onSliderDrag(event, this.props.type);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleTouchEnd() {\n    this.removeDocumentTouchMoveListener();\n    this.removeDocumentTouchEndListener();\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleKeyDown(event) {\n    this.props.onSliderKeyDown(event, this.props.type);\n  }\n\n  /**\n   * @override\n   * @return {JSX.Element}\n   */\n  render() {\n    const style = this.getStyle();\n\n    return (\n      <span\n        className={this.props.classNames.sliderContainer}\n        ref={(node) => { this.node = node; }}\n        style={style}>\n        <Label\n          classNames={this.props.classNames}\n          formatLabel={this.props.formatLabel}\n          type=\"value\">\n          {this.props.value}\n        </Label>\n\n        <div\n          aria-labelledby={this.props.ariaLabelledby}\n          aria-controls={this.props.ariaControls}\n          aria-valuemax={this.props.maxValue}\n          aria-valuemin={this.props.minValue}\n          aria-valuenow={this.props.value}\n          className={this.props.classNames.slider}\n          draggable=\"false\"\n          onKeyDown={this.handleKeyDown}\n          onMouseDown={this.handleMouseDown}\n          onTouchStart={this.handleTouchStart}\n          role=\"slider\"\n          tabIndex=\"0\" />\n      </span>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'autobind-decorator';\n\n/**\n * @ignore\n */\nexport default class Track extends React.Component {\n  /**\n   * @override\n   * @return {Object}\n   * @property {Function} children\n   * @property {Function} classNames\n   * @property {Boolean} draggableTrack\n   * @property {Function} onTrackDrag\n   * @property {Function} onTrackMouseDown\n   * @property {Function} percentages\n   */\n  static get propTypes() {\n    return {\n      children: PropTypes.node.isRequired,\n      classNames: PropTypes.objectOf(PropTypes.string).isRequired,\n      draggableTrack: PropTypes.bool,\n      onTrackDrag: PropTypes.func,\n      onTrackMouseDown: PropTypes.func.isRequired,\n      percentages: PropTypes.objectOf(PropTypes.number).isRequired,\n    };\n  }\n\n  /**\n   * @param {Object} props\n   * @param {InputRangeClassNames} props.classNames\n   * @param {Boolean} props.draggableTrack\n   * @param {Function} props.onTrackDrag\n   * @param {Function} props.onTrackMouseDown\n   * @param {number} props.percentages\n   */\n  constructor(props) {\n    super(props);\n\n    /**\n     * @private\n     * @type {?Component}\n     */\n    this.node = null;\n    this.trackDragEvent = null;\n  }\n\n  /**\n   * @private\n   * @return {ClientRect}\n   */\n  getClientRect() {\n    return this.node.getBoundingClientRect();\n  }\n\n  /**\n   * @private\n   * @return {Object} CSS styles\n   */\n  getActiveTrackStyle() {\n    const width = `${(this.props.percentages.max - this.props.percentages.min) * 100}%`;\n    const left = `${this.props.percentages.min * 100}%`;\n\n    return { left, width };\n  }\n\n  /**\n   * Listen to mousemove event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseMoveListener() {\n    this.removeDocumentMouseMoveListener();\n    this.node.ownerDocument.addEventListener('mousemove', this.handleMouseMove);\n  }\n\n  /**\n   * Listen to mouseup event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseUpListener() {\n    this.removeDocumentMouseUpListener();\n    this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseMoveListener() {\n    this.node.ownerDocument.removeEventListener('mousemove', this.handleMouseMove);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseUpListener() {\n    this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleMouseMove(event) {\n    if (!this.props.draggableTrack) {\n      return;\n    }\n\n    if (this.trackDragEvent !== null) {\n      this.props.onTrackDrag(event, this.trackDragEvent);\n    }\n\n    this.trackDragEvent = event;\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleMouseUp() {\n    if (!this.props.draggableTrack) {\n      return;\n    }\n\n    this.removeDocumentMouseMoveListener();\n    this.removeDocumentMouseUpListener();\n    this.trackDragEvent = null;\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event - User event\n   */\n  @autobind\n  handleMouseDown(event) {\n    const clientX = event.touches ? event.touches[0].clientX : event.clientX;\n    const trackClientRect = this.getClientRect();\n    const position = {\n      x: clientX - trackClientRect.left,\n      y: 0,\n    };\n\n    this.props.onTrackMouseDown(event, position);\n\n    if (this.props.draggableTrack) {\n      this.addDocumentMouseMoveListener();\n      this.addDocumentMouseUpListener();\n    }\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event - User event\n   */\n  @autobind\n  handleTouchStart(event) {\n    event.preventDefault();\n\n    this.handleMouseDown(event);\n  }\n\n  /**\n   * @override\n   * @return {JSX.Element}\n   */\n  render() {\n    const activeTrackStyle = this.getActiveTrackStyle();\n\n    return (\n      <div\n        className={this.props.classNames.track}\n        onMouseDown={this.handleMouseDown}\n        onTouchStart={this.handleTouchStart}\n        ref={(node) => { this.node = node; }}>\n        <div\n          style={activeTrackStyle}\n          className={this.props.classNames.activeTrack} />\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","/** @ignore */\nexport const DOWN_ARROW = 40;\n\n/** @ignore */\nexport const LEFT_ARROW = 37;\n\n/** @ignore */\nexport const RIGHT_ARROW = 39;\n\n/** @ignore */\nexport const UP_ARROW = 38;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Collapse from './Collapse';\nimport { omit, findDOMElements, defaultToggleEvents, addMultipleEventListeners } from './utils';\nvar omitKeys = ['toggleEvents', 'defaultOpen'];\nvar propTypes = {\n  defaultOpen: PropTypes.bool,\n  toggler: PropTypes.string.isRequired,\n  toggleEvents: PropTypes.arrayOf(PropTypes.string)\n};\nvar defaultProps = {\n  toggleEvents: defaultToggleEvents\n};\n\nvar UncontrolledCollapse = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(UncontrolledCollapse, _Component);\n\n  function UncontrolledCollapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.togglers = null;\n    _this.removeEventListeners = null;\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isOpen: props.defaultOpen || false\n    };\n    return _this;\n  }\n\n  var _proto = UncontrolledCollapse.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.togglers = findDOMElements(this.props.toggler);\n\n    if (this.togglers.length) {\n      this.removeEventListeners = addMultipleEventListeners(this.togglers, this.toggle, this.props.toggleEvents);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.togglers.length && this.removeEventListeners) {\n      this.removeEventListeners();\n    }\n  };\n\n  _proto.toggle = function toggle(e) {\n    this.setState(function (_ref) {\n      var isOpen = _ref.isOpen;\n      return {\n        isOpen: !isOpen\n      };\n    });\n    e.preventDefault();\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(Collapse, _extends({\n      isOpen: this.state.isOpen\n    }, omit(this.props, omitKeys)));\n  };\n\n  return UncontrolledCollapse;\n}(Component);\n\nUncontrolledCollapse.propTypes = propTypes;\nUncontrolledCollapse.defaultProps = defaultProps;\nexport default UncontrolledCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"innerRef\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;"],"sourceRoot":""}